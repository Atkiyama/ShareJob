{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/myCompany/editMemo.tsx\",\n  _s = $RefreshSig$();\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport CompanyDetail from '../../components/companyDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditMemo(_ref) {\n  _s();\n  let {\n    companyList,\n    myCompanyList,\n    updateMyCompanyList\n  } = _ref;\n  const {\n    email,\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  // 対応する会社情報を探す\n  const company = companyList.find(info => info.id === id);\n  //対応するメモを探す\n  const myCompany = myCompanyList.find(info => info.id === id && info.email === email);\n  const [memo, setMemo] = useState((myCompany === null || myCompany === void 0 ? void 0 : myCompany.memo) || '');\n  const handleMemoChange = event => {\n    setMemo(event.target.value);\n  };\n  /**\n   *APIにupdateリクエストする\n   */\n  const handleUpdate = async () => {\n    try {\n      await fetch(`http://localhost:5000/myCompany/updateMyCompany/${email}/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          memo: memo\n        })\n      });\n      if (company) {\n        alert(`${company.name}のメモを登録しました`);\n      }\n    } catch (err) {\n      alert('更新に失敗しました');\n    }\n  };\n\n  /**\n   * メモ削除の処理をする\n   */\n  const handleDelete = async () => {\n    const confirmDelete = window.confirm('本当にメモを削除しますか？');\n    if (confirmDelete) {\n      try {\n        const response = await fetch(`http://localhost:5000/myCompany/deleteMyCompany/${email}/${id}`, {\n          method: 'DELETE'\n        });\n        const jsonResponse = await response.json();\n        alert(jsonResponse.message);\n\n        // 削除が成功したら、リストから削除した情報を更新する\n        const updatedMyCompanyList = myCompanyList.filter(info => info.id !== id);\n        updateMyCompanyList(updatedMyCompanyList);\n\n        // 削除後にリダイレクトするならば以下の行を有効化する\n        navigate('/pages/home');\n      } catch (err) {\n        alert('削除に失敗しました');\n      }\n    }\n  };\n  /**\n   *完了ボタンが押されたときの処理を実装する\n   */\n  const handleComplete = () => {\n    const updatedMyCompanyList = myCompanyList.map(info => {\n      if (info.email === email && info.id === id) {\n        return {\n          ...info,\n          memo: memo\n        };\n      }\n      return info;\n    });\n    updateMyCompanyList(updatedMyCompanyList);\n    handleUpdate();\n    navigate('/pages/home');\n  };\n\n  /**\n   * タイトルを更新する\n   */\n  useEffect(() => {\n    if (company) {\n      document.title = `${company.name}のメモ`;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [company ? /*#__PURE__*/_jsxDEV(CompanyDetail, {\n      company: company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }, this) : null, company ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [company.name, \"\\u306E\\u30E1\\u30E2\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textarea\",\n        rows: 5,\n        value: memo,\n        onChange: handleMemoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleComplete,\n      children: \"\\u5B8C\\u4E86\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"\\u6D88\\u53BB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 3\n  }, this);\n}\n_s(EditMemo, \"K+b5Jj4jacMd77MTga+hPNk8Muw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditMemo;\nexport default EditMemo;\nvar _c;\n$RefreshReg$(_c, \"EditMemo\");","map":{"version":3,"names":["useParams","useNavigate","useState","useEffect","CompanyDetail","jsxDEV","_jsxDEV","EditMemo","_ref","_s","companyList","myCompanyList","updateMyCompanyList","email","id","navigate","company","find","info","myCompany","memo","setMemo","handleMemoChange","event","target","value","handleUpdate","fetch","method","headers","body","JSON","stringify","alert","name","err","handleDelete","confirmDelete","window","confirm","response","jsonResponse","json","message","updatedMyCompanyList","filter","handleComplete","map","document","title","children","fileName","_jsxFileName","lineNumber","columnNumber","className","rows","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/myCompany/editMemo.tsx"],"sourcesContent":["import { useParams, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { EditMemoProps, MyCompanyType, CompanyType } from '../../utils/types';\nimport CompanyDetail from '../../components/companyDetail';\n\nfunction EditMemo({\n\tcompanyList,\n\tmyCompanyList,\n\tupdateMyCompanyList,\n}: EditMemoProps) {\n\tconst { email, id } = useParams();\n\tconst navigate = useNavigate();\n\t// 対応する会社情報を探す\n\tconst company: CompanyType | undefined = companyList.find(\n\t\t(info) => info.id === id\n\t);\n\t//対応するメモを探す\n\tconst myCompany: MyCompanyType | undefined = myCompanyList.find(\n\t\t(info) => info.id === id && info.email === email\n\t);\n\n\tconst [memo, setMemo] = useState<string>(myCompany?.memo || '');\n\n\tconst handleMemoChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n\t\tsetMemo(event.target.value);\n\t};\n\t/**\n\t *APIにupdateリクエストする\n\t */\n\tconst handleUpdate = async () => {\n\t\ttry {\n\t\t\tawait fetch(\n\t\t\t\t`http://localhost:5000/myCompany/updateMyCompany/${email}/${id}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tmemo: memo,\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (company) {\n\t\t\t\talert(`${company.name}のメモを登録しました`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\talert('更新に失敗しました');\n\t\t}\n\t};\n\n\t/**\n\t * メモ削除の処理をする\n\t */\n\tconst handleDelete = async () => {\n\t\tconst confirmDelete = window.confirm('本当にメモを削除しますか？');\n\t\tif (confirmDelete) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`http://localhost:5000/myCompany/deleteMyCompany/${email}/${id}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst jsonResponse = await response.json();\n\t\t\t\talert(jsonResponse.message);\n\n\t\t\t\t// 削除が成功したら、リストから削除した情報を更新する\n\t\t\t\tconst updatedMyCompanyList = myCompanyList.filter(\n\t\t\t\t\t(info) => info.id !== id\n\t\t\t\t);\n\t\t\t\tupdateMyCompanyList(updatedMyCompanyList);\n\n\t\t\t\t// 削除後にリダイレクトするならば以下の行を有効化する\n\t\t\t\tnavigate('/pages/home');\n\t\t\t} catch (err) {\n\t\t\t\talert('削除に失敗しました');\n\t\t\t}\n\t\t}\n\t};\n\t/**\n\t *完了ボタンが押されたときの処理を実装する\n\t */\n\tconst handleComplete = () => {\n\t\tconst updatedMyCompanyList = myCompanyList.map((info) => {\n\t\t\tif (info.email === email && info.id === id) {\n\t\t\t\treturn {\n\t\t\t\t\t...info,\n\t\t\t\t\tmemo: memo,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn info;\n\t\t});\n\n\t\tupdateMyCompanyList(updatedMyCompanyList);\n\t\thandleUpdate();\n\t\tnavigate('/pages/home');\n\t};\n\n\t/**\n\t * タイトルを更新する\n\t */\n\tuseEffect(() => {\n\t\tif (company) {\n\t\t\tdocument.title = `${company.name}のメモ`;\n\t\t}\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t{company ? <CompanyDetail company={company} /> : null}\n\t\t\t{company ? <h2>{company.name}のメモ</h2> : null}\n\t\t\t<div className=\"textarea-container\">\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"textarea\"\n\t\t\t\t\trows={5}\n\t\t\t\t\tvalue={memo}\n\t\t\t\t\tonChange={handleMemoChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button onClick={handleComplete}>完了</button>\n\t\t\t<button onClick={handleDelete}>消去</button>\n\t\t</div>\n\t);\n}\n\nexport default EditMemo;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAOC,aAAa,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,QAAQA,CAAAC,IAAA,EAIC;EAAAC,EAAA;EAAA,IAJA;IACjBC,WAAW;IACXC,aAAa;IACbC;EACc,CAAC,GAAAJ,IAAA;EACf,MAAM;IAAEK,KAAK;IAAEC;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC;EACjC,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMe,OAAgC,GAAGN,WAAW,CAACO,IAAI,CACvDC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EACvB,CAAC;EACD;EACA,MAAMK,SAAoC,GAAGR,aAAa,CAACM,IAAI,CAC7DC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,IAAII,IAAI,CAACL,KAAK,KAAKA,KAC5C,CAAC;EAED,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAS,CAAAiB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEC,IAAI,KAAI,EAAE,CAAC;EAE/D,MAAME,gBAAgB,GAAIC,KAA6C,IAAK;IAC3EF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EACD;AACD;AACA;EACC,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACH,MAAMC,KAAK,CACT,mDAAkDd,KAAM,IAAGC,EAAG,EAAC,EAChE;QACCc,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACR,cAAc,EAAE;QACjB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACpBZ,IAAI,EAAEA;QACP,CAAC;MACF,CACD,CAAC;MACD,IAAIJ,OAAO,EAAE;QACZiB,KAAK,CAAE,GAAEjB,OAAO,CAACkB,IAAK,YAAW,CAAC;MACnC;IACD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACbF,KAAK,CAAC,WAAW,CAAC;IACnB;EACD,CAAC;;EAED;AACD;AACA;EACC,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC;IACrD,IAAIF,aAAa,EAAE;MAClB,IAAI;QACH,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAC1B,mDAAkDd,KAAM,IAAGC,EAAG,EAAC,EAChE;UACCc,MAAM,EAAE;QACT,CACD,CAAC;QAED,MAAMa,YAAY,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC1CT,KAAK,CAACQ,YAAY,CAACE,OAAO,CAAC;;QAE3B;QACA,MAAMC,oBAAoB,GAAGjC,aAAa,CAACkC,MAAM,CAC/C3B,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EACvB,CAAC;QACDF,mBAAmB,CAACgC,oBAAoB,CAAC;;QAEzC;QACA7B,QAAQ,CAAC,aAAa,CAAC;MACxB,CAAC,CAAC,OAAOoB,GAAG,EAAE;QACbF,KAAK,CAAC,WAAW,CAAC;MACnB;IACD;EACD,CAAC;EACD;AACD;AACA;EACC,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC5B,MAAMF,oBAAoB,GAAGjC,aAAa,CAACoC,GAAG,CAAE7B,IAAI,IAAK;MACxD,IAAIA,IAAI,CAACL,KAAK,KAAKA,KAAK,IAAIK,IAAI,CAACJ,EAAE,KAAKA,EAAE,EAAE;QAC3C,OAAO;UACN,GAAGI,IAAI;UACPE,IAAI,EAAEA;QACP,CAAC;MACF;MACA,OAAOF,IAAI;IACZ,CAAC,CAAC;IAEFN,mBAAmB,CAACgC,oBAAoB,CAAC;IACzClB,YAAY,CAAC,CAAC;IACdX,QAAQ,CAAC,aAAa,CAAC;EACxB,CAAC;;EAED;AACD;AACA;EACCZ,SAAS,CAAC,MAAM;IACf,IAAIa,OAAO,EAAE;MACZgC,QAAQ,CAACC,KAAK,GAAI,GAAEjC,OAAO,CAACkB,IAAK,KAAI;IACtC;EACD,CAAC,CAAC;EAEF,oBACC5B,OAAA;IAAA4C,QAAA,GACElC,OAAO,gBAAGV,OAAA,CAACF,aAAa;MAACY,OAAO,EAAEA;IAAQ;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,IAAI,EACpDtC,OAAO,gBAAGV,OAAA;MAAA4C,QAAA,GAAKlC,OAAO,CAACkB,IAAI,EAAC,oBAAG;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAAG,IAAI,eAC5ChD,OAAA;MAAKiD,SAAS,EAAC,oBAAoB;MAAAL,QAAA,eAClC5C,OAAA;QACCiD,SAAS,EAAC,UAAU;QACpBC,IAAI,EAAE,CAAE;QACR/B,KAAK,EAAEL,IAAK;QACZqC,QAAQ,EAAEnC;MAAiB;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNhD,OAAA;MAAQoD,OAAO,EAAEZ,cAAe;MAAAI,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5ChD,OAAA;MAAQoD,OAAO,EAAEtB,YAAa;MAAAc,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAER;AAAC7C,EAAA,CAxHQF,QAAQ;EAAA,QAKMP,SAAS,EACdC,WAAW;AAAA;AAAA0D,EAAA,GANpBpD,QAAQ;AA0HjB,eAAeA,QAAQ;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}