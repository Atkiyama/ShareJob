{"ast":null,"code":"import _regeneratorRuntime from\"/Users/akiyamashuuhei/data/ShereJob/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/akiyamashuuhei/data/ShereJob/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React,{useEffect}from'react';import{useNavigate}from'react-router-dom';import{flexRender,getCoreRowModel,useReactTable}from'@tanstack/react-table';/**\n * 自分で登録した企業リストを表示する\n * @param param0\n * @returns\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CompanyList(_ref){var user=_ref.user,registerCompanyList=_ref.registerCompanyList,updateRegisterCompanyList=_ref.updateRegisterCompanyList;var navigate=useNavigate();/**\n\t * 表のヘッダを定義\n\t */var columns=[{accessorKey:'name',header:''},{accessorKey:'abstract',header:''},{accessorKey:'actions',header:'',// 空のヘッダーを指定して編集ボタンの列を作成\ncell:function cell(rowContext){return/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleOpenEdit(rowContext.row.original);},children:\"\\u8A73\\u7D30\"});}}// 他のカラムを追加する場合はここに定義します\n];/**\n\t * 企業編集画面を開く\n\t * @param row idを格納する\n\t */var handleOpenEdit=function handleOpenEdit(row){navigate(\"/pages/company/companyEdit/\".concat(row.id));};var data=registerCompanyList;/**\n\t * reactテーブルを定義\n\t */var table=useReactTable({data:data,columns:columns,getCoreRowModel:getCoreRowModel()});/**\n\t * 自分が登録した企業をバックエンドから取得する\n\t */var handleMyCompanyList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,jsonResponse;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(process.env.REACT_APP_BASE_URL+\"company/getRegisterCompanyList?email=\".concat(user.email),{method:'GET',headers:{Accept:'application/json','Content-Type':'application/json',authorization:\"Bearer \".concat(localStorage.getItem('token'))}});case 2:response=_context.sent;_context.next=5;return response.json();case 5:jsonResponse=_context.sent;updateRegisterCompanyList(jsonResponse.companyList);case 7:case\"end\":return _context.stop();}},_callee);}));return function handleMyCompanyList(){return _ref2.apply(this,arguments);};}();var handleAdd=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:navigate(\"/pages/company/companyRegister/\");case 1:case\"end\":return _context2.stop();}},_callee2);}));return function handleAdd(){return _ref3.apply(this,arguments);};}();/**\n\t *ログイン状態によって処理を分岐する\n\t */useEffect(function(){document.title=\"\\u767B\\u9332\\u4F01\\u696D\\u4E00\\u89A7\";if(user.email!==''){handleMyCompanyList();}else{alert('ログインしてください');navigate('/pages/user/login');}},[]);if(typeof data!=='undefined'){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{}),/*#__PURE__*/_jsx(\"tbody\",{children:table.getRowModel().rows.map(function(row,index){return/*#__PURE__*/_jsx(\"tr\",{children:row.getVisibleCells().map(function(cell,index){return/*#__PURE__*/_jsx(\"td\",{children:flexRender(cell.column.columnDef.cell,cell.getContext())},index);})},index);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"position-fixed\",children:[\"\\u4F01\\u696D\\u306E\\u8FFD\\u52A0\\u767B\\u9332 \\u2192\",' ',/*#__PURE__*/_jsx(\"button\",{className:\"large-button\",onClick:handleAdd,children:\"+\"})]})]});}else{var handleError=function handleError(){handleMyCompanyList();};handleError();return/*#__PURE__*/_jsx(\"div\",{});}}export default CompanyList;","map":{"version":3,"names":["React","useEffect","useNavigate","flexRender","getCoreRowModel","useReactTable","jsx","_jsx","jsxs","_jsxs","CompanyList","_ref","user","registerCompanyList","updateRegisterCompanyList","navigate","columns","accessorKey","header","cell","rowContext","onClick","handleOpenEdit","row","original","children","concat","id","data","table","handleMyCompanyList","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","jsonResponse","wrap","_callee$","_context","prev","next","fetch","process","env","REACT_APP_BASE_URL","email","method","headers","Accept","authorization","localStorage","getItem","sent","json","companyList","stop","apply","arguments","handleAdd","_ref3","_callee2","_callee2$","_context2","document","title","alert","className","getRowModel","rows","map","index","getVisibleCells","column","columnDef","getContext","handleError"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/companyList.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CompanyListProps, CompanyTableType } from '../../utils/types';\nimport {\n\tColumnDef,\n\tflexRender,\n\tgetCoreRowModel,\n\tuseReactTable,\n\tCellContext,\n} from '@tanstack/react-table';\n\n/**\n * 自分で登録した企業リストを表示する\n * @param param0\n * @returns\n */\nfunction CompanyList({\n\tuser,\n\tregisterCompanyList,\n\tupdateRegisterCompanyList,\n}: CompanyListProps) {\n\tconst navigate = useNavigate();\n\t/**\n\t * 表のヘッダを定義\n\t */\n\tconst columns: ColumnDef<CompanyTableType, any>[] = [\n\t\t{\n\t\t\taccessorKey: 'name',\n\t\t\theader: '',\n\t\t},\n\t\t{\n\t\t\taccessorKey: 'abstract',\n\t\t\theader: '',\n\t\t},\n\t\t{\n\t\t\taccessorKey: 'actions',\n\t\t\theader: '', // 空のヘッダーを指定して編集ボタンの列を作成\n\t\t\tcell: (rowContext: CellContext<CompanyTableType, any>) => (\n\t\t\t\t<button onClick={() => handleOpenEdit(rowContext.row.original)}>\n\t\t\t\t\t詳細\n\t\t\t\t</button>\n\t\t\t),\n\t\t},\n\t\t// 他のカラムを追加する場合はここに定義します\n\t];\n\n\t/**\n\t * 企業編集画面を開く\n\t * @param row idを格納する\n\t */\n\tconst handleOpenEdit = (row: CompanyTableType) => {\n\t\tnavigate(`/pages/company/companyEdit/${row.id}`);\n\t};\n\n\tconst data = registerCompanyList;\n\t/**\n\t * reactテーブルを定義\n\t */\n\tconst table = useReactTable<CompanyTableType>({\n\t\tdata: data,\n\t\tcolumns,\n\t\tgetCoreRowModel: getCoreRowModel(),\n\t});\n\n\t/**\n\t * 自分が登録した企業をバックエンドから取得する\n\t */\n\tconst handleMyCompanyList = async () => {\n\t\tconst response = await fetch(\n\t\t\tprocess.env.REACT_APP_BASE_URL! +\n\t\t\t\t`company/getRegisterCompanyList?email=${user.email}`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tauthorization: `Bearer ${localStorage.getItem('token')}`,\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t\tconst jsonResponse = await response.json();\n\t\tupdateRegisterCompanyList(jsonResponse.companyList);\n\t};\n\tconst handleAdd = async () => {\n\t\tnavigate(`/pages/company/companyRegister/`);\n\t};\n\n\t/**\n\t *ログイン状態によって処理を分岐する\n\t */\n\tuseEffect(() => {\n\t\tdocument.title = `登録企業一覧`;\n\t\tif (user.email !== '') {\n\t\t\thandleMyCompanyList();\n\t\t} else {\n\t\t\talert('ログインしてください');\n\t\t\tnavigate('/pages/user/login');\n\t\t}\n\t}, []);\n\tif (typeof data !== 'undefined') {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<table className=\"table\">\n\t\t\t\t\t<thead></thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{table.getRowModel().rows.map((row, index) => (\n\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t{row.getVisibleCells().map((cell, index) => (\n\t\t\t\t\t\t\t\t\t<td key={index}>\n\t\t\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\t<div className=\"position-fixed\">\n\t\t\t\t\t企業の追加登録 →{' '}\n\t\t\t\t\t<button className=\"large-button\" onClick={handleAdd}>\n\t\t\t\t\t\t+\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\tconst handleError = () => {\n\t\t\thandleMyCompanyList();\n\t\t};\n\t\thandleError();\n\t\treturn <div></div>;\n\t}\n}\n\nexport default CompanyList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}