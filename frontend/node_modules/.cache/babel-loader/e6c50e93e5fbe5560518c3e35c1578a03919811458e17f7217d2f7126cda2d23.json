{"ast":null,"code":"import _regeneratorRuntime from\"/Users/akiyamashuuhei/data/ShereJob/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/akiyamashuuhei/data/ShereJob/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/akiyamashuuhei/data/ShereJob/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useNavigate}from'react-router-dom';import{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";/**\n * ユーザ情報を編集する\n * @param param0\n * @returns\n */function EditUser(_ref){var user=_ref.user,updateCompanyList=_ref.updateCompanyList,updateMyCompanyList=_ref.updateMyCompanyList,handleUpdate=_ref.handleUpdate;var navigate=useNavigate();var _useState=useState(user.name),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(user.email),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];/**\n\t * APIを叩いて情報を更新する\n\t * @param e\n\t */var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var response,jsonResponse;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;_context.next=4;return fetch(process.env.REACT_APP_BASE_URL+\"user/updateAll/\".concat(user.email),{method:'PUT',headers:{'Content-Type':'application/json',authorization:\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify({name:name,email:email,password:password})});case 4:response=_context.sent;_context.next=7;return response.json();case 7:jsonResponse=_context.sent;updateCompanyList([]);// 空の配列でリストを更新\nupdateMyCompanyList([]);// 空の配列でリストを更新\nlocalStorage.removeItem('token');// 削除後にリダイレクトする場合は以下の行を有効化する\nnavigate('/');alert(jsonResponse.message);//handleUpdate();\n_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](1);console.log(_context.t0);alert('エラーが発生しました \\n 恐れ入りますが時間をおいてもう一度ユーザ情報の更新をしてみてください');case 19:case\"end\":return _context.stop();}},_callee,null,[[1,15]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();/**\n\t * ログインしていればuseStateにuserの情報を入れる\n\t * ログインしていなければログイン画面に遷移する\n\t */useEffect(function(){if(user.email===''){alert('ログインしていません');handleCancel();}document.title='ユーザ情報編集';});/**\n\t * キャンセルボタンを押した際の処理\n\t */var handleCancel=function handleCancel(){handleUpdate();navigate('/');};/**\n\t * ユーザ削除をした時の処理\n\t */var handleDelete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var confirmDelete,response,jsonResponse;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:confirmDelete=window.confirm('本当にユーザを削除しますか？');if(!confirmDelete){_context2.next=10;break;}_context2.next=4;return fetch(process.env.REACT_APP_BASE_URL+\"user/delete/\".concat(email),{method:'DELETE',headers:{authorization:\"Bearer \".concat(localStorage.getItem('token'))}});case 4:response=_context2.sent;_context2.next=7;return response.json();case 7:jsonResponse=_context2.sent;alert(jsonResponse.message);// 削除が成功したら、リストから削除した情報を更新する\nif(response.ok){updateCompanyList([]);// 空の配列でリストを更新\nupdateMyCompanyList([]);// 空の配列でリストを更新\nlocalStorage.removeItem('token');// 削除後にリダイレクトする場合は以下の行を有効化する\nnavigate('/');}else{alert('通信失敗');}case 10:case\"end\":return _context2.stop();}},_callee2);}));return function handleDelete(){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"\\u30E6\\u30FC\\u30B6\\u60C5\\u5831\\u7DE8\\u96C6\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u6CE8:\\u30E6\\u30FC\\u30B6\\u60C5\\u5831\\u3092\\u5909\\u66F4\\u3059\\u308B\\u3068\\u4E00\\u5EA6\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\\u3057\\u307E\\u3059\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{value:name,onChange:function onChange(e){return setName(e.target.value);},type:\"text\",name:\"name\",placeholder:\"\\u540D\\u524D\",required:true}),/*#__PURE__*/_jsx(\"input\",{value:email,onChange:function onChange(e){return setEmail(e.target.value);},type:\"text\",name:\"email\",placeholder:\"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",required:true}),/*#__PURE__*/_jsx(\"input\",{value:password,onChange:function onChange(e){return setPassword(e.target.value);},type:\"text\",name:\"password\",placeholder:\"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",required:true}),/*#__PURE__*/_jsx(\"button\",{children:\"\\u767B\\u9332\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDelete,children:\"\\u524A\\u9664\"})]});}export default EditUser;","map":{"version":3,"names":["useNavigate","useState","useEffect","jsx","_jsx","jsxs","_jsxs","EditUser","_ref","user","updateCompanyList","updateMyCompanyList","handleUpdate","navigate","_useState","name","_useState2","_slicedToArray","setName","_useState3","email","_useState4","setEmail","_useState5","_useState6","password","setPassword","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","jsonResponse","wrap","_callee$","_context","prev","next","preventDefault","fetch","process","env","REACT_APP_BASE_URL","concat","method","headers","authorization","localStorage","getItem","body","JSON","stringify","sent","json","removeItem","alert","message","t0","console","log","stop","_x","apply","arguments","handleCancel","document","title","handleDelete","_ref3","_callee2","confirmDelete","_callee2$","_context2","window","confirm","ok","children","className","onSubmit","value","onChange","target","type","placeholder","required","onClick"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/user/editUser.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { EditUserProps } from '../../utils/types';\n\n/**\n * ユーザ情報を編集する\n * @param param0\n * @returns\n */\nfunction EditUser({\n\tuser,\n\tupdateCompanyList,\n\tupdateMyCompanyList,\n\thandleUpdate,\n}: EditUserProps) {\n\tconst navigate = useNavigate();\n\tconst [name, setName] = useState(user.name);\n\tconst [email, setEmail] = useState(user.email);\n\tconst [password, setPassword] = useState('');\n\t/**\n\t * APIを叩いて情報を更新する\n\t * @param e\n\t */\n\tconst handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\tprocess.env.REACT_APP_BASE_URL! + `user/updateAll/${user.email}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\tauthorization: `Bearer ${localStorage.getItem('token')}`,\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\temail: email,\n\t\t\t\t\t\tpassword: password,\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tupdateCompanyList([]); // 空の配列でリストを更新\n\t\t\tupdateMyCompanyList([]); // 空の配列でリストを更新\n\t\t\tlocalStorage.removeItem('token');\n\n\t\t\t// 削除後にリダイレクトする場合は以下の行を有効化する\n\t\t\tnavigate('/');\n\t\t\talert(jsonResponse.message);\n\t\t\t//handleUpdate();\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\talert(\n\t\t\t\t'エラーが発生しました \\n 恐れ入りますが時間をおいてもう一度ユーザ情報の更新をしてみてください'\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * ログインしていればuseStateにuserの情報を入れる\n\t * ログインしていなければログイン画面に遷移する\n\t */\n\tuseEffect(() => {\n\t\tif (user.email === '') {\n\t\t\talert('ログインしていません');\n\t\t\thandleCancel();\n\t\t}\n\t\tdocument.title = 'ユーザ情報編集';\n\t});\n\n\t/**\n\t * キャンセルボタンを押した際の処理\n\t */\n\tconst handleCancel = () => {\n\t\thandleUpdate();\n\t\tnavigate('/');\n\t};\n\n\t/**\n\t * ユーザ削除をした時の処理\n\t */\n\tconst handleDelete = async () => {\n\t\tconst confirmDelete = window.confirm('本当にユーザを削除しますか？');\n\t\tif (confirmDelete) {\n\t\t\tconst response = await fetch(\n\t\t\t\tprocess.env.REACT_APP_BASE_URL! + `user/delete/${email}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tauthorization: `Bearer ${localStorage.getItem('token')}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst jsonResponse = await response.json();\n\n\t\t\talert(jsonResponse.message);\n\n\t\t\t// 削除が成功したら、リストから削除した情報を更新する\n\t\t\tif (response.ok) {\n\t\t\t\tupdateCompanyList([]); // 空の配列でリストを更新\n\t\t\t\tupdateMyCompanyList([]); // 空の配列でリストを更新\n\t\t\t\tlocalStorage.removeItem('token');\n\n\t\t\t\t// 削除後にリダイレクトする場合は以下の行を有効化する\n\t\t\t\tnavigate('/');\n\t\t\t} else {\n\t\t\t\talert('通信失敗');\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"page-title\">ユーザ情報編集</h1>\n\t\t\t<h2>注:ユーザ情報を変更すると一度ログアウトします</h2>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tplaceholder=\"名前\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tplaceholder=\"メールアドレス\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tplaceholder=\"パスワード\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<button>登録</button>\n\t\t\t</form>\n\t\t\t<button onClick={handleDelete}>削除</button>\n\t\t</div>\n\t);\n}\n\nexport default EditUser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}