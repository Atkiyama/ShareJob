{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport Header from './components/header';\nimport Home from './pages/home';\nimport Top from './pages/top';\nimport Login from './pages/user/login';\nimport Logout from './pages/user/logout';\nimport Register from './pages/user/register';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    companyInfoList: []\n  });\n  const [companyInfoList, setCompanyInfoList] = useState([]);\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n  };\n  const updateCompanyInfoList = updateCompanyInfoList => {\n    setCompanyInfoList(updateCompanyInfoList);\n  };\n  const [companyList, setCompanyList] = useState([]);\n  const updateCompanyList = updateCompanyList => {\n    setCompanyList(updateCompanyList);\n  };\n  useEffect(() => {\n    if (user.email !== '') {\n      const handleCompanyInfoList = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/companyInfo/getCompanyInfoList?email=${user.email}`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          const jsonResponse = await response.json();\n          const jsonCompanyInfoList = jsonResponse.CompanyInfoList;\n          updateCompanyInfoList(jsonCompanyInfoList);\n        } catch (err) {\n          alert('企業情報の取得に失敗しました\\n' + err);\n          console.log(err);\n        }\n      };\n      handleCompanyInfoList();\n    }\n  }, [user.email]);\n  useEffect(() => {\n    if (user.email !== '') {\n      const handleCompanyList = async () => {\n        try {\n          const ids = companyInfoList.map(info => info.id);\n          const joinedString = ids.join(',');\n          const req = `http://localhost:5000/companyInfo/getCompanyList?ids=${joinedString}`;\n          const response = await fetch(req, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          const jsonResponse = await response.json();\n          const jsonCompanyList = jsonResponse.CompanyList;\n          updateCompanyList(jsonCompanyList);\n        } catch (err) {\n          //alert('企業情報の取得に失敗しました\\n' + err);\n          console.log(err);\n        }\n      };\n      handleCompanyList();\n    }\n  }, [user.email, companyInfoList]);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Top, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/home\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            user: user,\n            companyInfoList: companyInfoList,\n            companyList: companyList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/user/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            updateUser: updateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/user/logout\",\n          element: /*#__PURE__*/_jsxDEV(Logout, {\n            updateUser: updateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/user/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Page Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"5Pyxh/qxU+ye32dsUOuR9xz7KTA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Routes","BrowserRouter","Header","Home","Top","Login","Logout","Register","jsxDEV","_jsxDEV","App","_s","user","setUser","name","email","companyInfoList","setCompanyInfoList","updateUser","updatedUser","updateCompanyInfoList","companyList","setCompanyList","updateCompanyList","handleCompanyInfoList","response","fetch","method","headers","jsonResponse","json","jsonCompanyInfoList","CompanyInfoList","err","alert","console","log","handleCompanyList","ids","map","info","id","joinedString","join","req","jsonCompanyList","CompanyList","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport Header from './components/header';\nimport Home from './pages/home';\nimport Top from './pages/top';\nimport Login from './pages/user/login';\nimport Logout from './pages/user/logout';\nimport Register from './pages/user/register';\nimport './App.css';\nimport { UserType, CompanyInfoType, CompanyType } from './utils/types';\nimport { Company } from '../../backend/src/model/company';\n\nfunction App() {\n\tconst [user, setUser] = useState<UserType>({\n\t\tname: '',\n\t\temail: '',\n\t\tcompanyInfoList: [],\n\t});\n\n\tconst [companyInfoList, setCompanyInfoList] = useState<CompanyInfoType[]>([]);\n\n\tconst updateUser = (updatedUser: UserType) => {\n\t\tsetUser(updatedUser);\n\t};\n\n\tconst updateCompanyInfoList = (updateCompanyInfoList: CompanyInfoType[]) => {\n\t\tsetCompanyInfoList(updateCompanyInfoList);\n\t};\n\n\tconst [companyList, setCompanyList] = useState<CompanyType[]>([]);\n\n\tconst updateCompanyList = (updateCompanyList: CompanyType[]) => {\n\t\tsetCompanyList(updateCompanyList);\n\t};\n\n\tuseEffect(() => {\n\t\tif (user.email !== '') {\n\t\t\tconst handleCompanyInfoList = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(\n\t\t\t\t\t\t`http://localhost:5000/companyInfo/getCompanyInfoList?email=${user.email}`,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tconst jsonResponse = await response.json();\n\t\t\t\t\tconst jsonCompanyInfoList = jsonResponse.CompanyInfoList;\n\t\t\t\t\tupdateCompanyInfoList(jsonCompanyInfoList);\n\t\t\t\t} catch (err) {\n\t\t\t\t\talert('企業情報の取得に失敗しました\\n' + err);\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t};\n\t\t\thandleCompanyInfoList();\n\t\t}\n\t}, [user.email]);\n\n\tuseEffect(() => {\n\t\tif (user.email !== '') {\n\t\t\tconst handleCompanyList = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst ids: string[] = companyInfoList.map((info) => info.id);\n\t\t\t\t\tconst joinedString = ids.join(',');\n\t\t\t\t\tconst req = `http://localhost:5000/companyInfo/getCompanyList?ids=${joinedString}`;\n\t\t\t\t\tconst response = await fetch(req, {\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tconst jsonResponse = await response.json();\n\t\t\t\t\tconst jsonCompanyList = jsonResponse.CompanyList;\n\t\t\t\t\tupdateCompanyList(jsonCompanyList);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t//alert('企業情報の取得に失敗しました\\n' + err);\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\thandleCompanyList();\n\t\t}\n\t}, [user.email, companyInfoList]);\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"container\">\n\t\t\t\t<Header />\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"/\" element={<Top />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/home\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Home\n\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\tcompanyInfoList={companyInfoList}\n\t\t\t\t\t\t\t\tcompanyList={companyList}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/user/login\"\n\t\t\t\t\t\telement={<Login updateUser={updateUser} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/user/logout\"\n\t\t\t\t\t\telement={<Logout updateUser={updateUser} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/pages/user/register\" element={<Register />} />\n\t\t\t\t\t<Route path=\"*\" element={<h1>Page Not Found</h1>} />\n\t\t\t\t</Routes>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}