{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/companyDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyDetail(_ref) {\n  _s();\n  let {\n    searchedCompany,\n    user,\n    companyList,\n    companyInfoList,\n    updateUser,\n    updateCompanyList,\n    updateCompanyInfoList\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [company, setCompany] = useState();\n  useEffect(() => {\n    const foundCompany = searchedCompany.find(item => item.id === id);\n    if (foundCompany) {\n      setCompany(foundCompany);\n      if (typeof company !== 'undefined') {\n        document.title = `${company.name}`;\n      }\n    }\n  });\n  const handleRegisterCompanyInfo = async () => {\n    try {\n      await fetch(`http://localhost:5000/companyInfo/updateCompanyInfo/${user.email}/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          memo: ''\n        })\n      });\n    } catch (err) {\n      alert('更新に失敗しました');\n    }\n  };\n  const handleUser = async () => {\n    await fetch(`http://localhost:5000/user/update/${user.email}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: user.name,\n        companyInfoList: user.companyInfoList\n      })\n    });\n  };\n  const handleAdd = () => {\n    const findId = user.companyInfoList.find(item => item === id);\n    if (!findId) {\n      const companyInfoListSt = user.companyInfoList;\n      if (typeof id === 'string') {\n        companyInfoListSt.push(id);\n      }\n      const updatedUser = {\n        name: user.name,\n        email: user.email,\n        companyInfoList: companyInfoListSt\n      };\n      updateUser(updatedUser);\n      if (id) {\n        const CompanyInfo = {\n          email: user.email,\n          id: id,\n          memo: ''\n        };\n        const updatedCompanyInfoList = companyInfoList;\n        updatedCompanyInfoList.push(CompanyInfo);\n        updateCompanyInfoList(updatedCompanyInfoList);\n        const findCompany = companyList.find(item => item.id === id);\n        if (!findCompany && company) {\n          const updatedCompanyList = companyList;\n          updatedCompanyList.push(company);\n          updateCompanyList(updatedCompanyList);\n        }\n      }\n    }\n    handleRegisterCompanyInfo();\n    handleUser();\n    if (company) {\n      alert(`${company.name}を登録しました`);\n    }\n    navigate('/pages/company/searchCompany');\n  };\n  const handleReturn = () => {\n    navigate('/pages/company/searchCompany');\n  };\n  if (typeof company !== 'undefined') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: company.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u6982\\u8981\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: company.abstract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u696D\\u7A2E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: company.industries.join(',')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u52E4\\u52D9\\u5730\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: company.locations.join(',')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAdd(),\n        children: \"\\u767B\\u9332\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReturn(),\n        children: \"\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 10\n    }, this);\n  }\n}\n_s(CompanyDetail, \"HdyNK+0ufGtU2emPGW5kdv8lLlY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CompanyDetail;\nexport default CompanyDetail;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetail\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","CompanyDetail","_ref","_s","searchedCompany","user","companyList","companyInfoList","updateUser","updateCompanyList","updateCompanyInfoList","id","navigate","company","setCompany","foundCompany","find","item","document","title","name","handleRegisterCompanyInfo","fetch","email","method","headers","body","JSON","stringify","memo","err","alert","handleUser","handleAdd","findId","companyInfoListSt","push","updatedUser","CompanyInfo","updatedCompanyInfoList","findCompany","updatedCompanyList","handleReturn","children","fileName","_jsxFileName","lineNumber","columnNumber","abstract","industries","join","locations","onClick","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/companyDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n\tCompanyDetailProps,\n\tCompanyInfoType,\n\tCompanyType,\n} from '../../utils/types';\n\nfunction CompanyDetail({\n\tsearchedCompany,\n\tuser,\n\tcompanyList,\n\tcompanyInfoList,\n\tupdateUser,\n\tupdateCompanyList,\n\tupdateCompanyInfoList,\n}: CompanyDetailProps) {\n\tconst { id } = useParams<{ id: string }>();\n\tconst navigate = useNavigate();\n\tconst [company, setCompany] = useState<CompanyType>();\n\tuseEffect(() => {\n\t\tconst foundCompany = searchedCompany.find((item) => item.id === id);\n\n\t\tif (foundCompany) {\n\t\t\tsetCompany(foundCompany);\n\t\t\tif (typeof company !== 'undefined') {\n\t\t\t\tdocument.title = `${company.name}`;\n\t\t\t}\n\t\t}\n\t});\n\tconst handleRegisterCompanyInfo = async () => {\n\t\ttry {\n\t\t\tawait fetch(\n\t\t\t\t`http://localhost:5000/companyInfo/updateCompanyInfo/${user.email}/${id}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tmemo: '',\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (err) {\n\t\t\talert('更新に失敗しました');\n\t\t}\n\t};\n\n\tconst handleUser = async () => {\n\t\tawait fetch(`http://localhost:5000/user/update/${user.email}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: user.name,\n\t\t\t\tcompanyInfoList: user.companyInfoList,\n\t\t\t}),\n\t\t});\n\t};\n\tconst handleAdd = () => {\n\t\tconst findId: string | undefined = user.companyInfoList.find(\n\t\t\t(item) => item === id\n\t\t);\n\t\tif (!findId) {\n\t\t\tconst companyInfoListSt = user.companyInfoList;\n\t\t\tif (typeof id === 'string') {\n\t\t\t\tcompanyInfoListSt.push(id);\n\t\t\t}\n\t\t\tconst updatedUser = {\n\t\t\t\tname: user.name,\n\t\t\t\temail: user.email,\n\t\t\t\tcompanyInfoList: companyInfoListSt,\n\t\t\t};\n\t\t\tupdateUser(updatedUser);\n\t\t\tif (id) {\n\t\t\t\tconst CompanyInfo: CompanyInfoType = {\n\t\t\t\t\temail: user.email,\n\t\t\t\t\tid: id,\n\t\t\t\t\tmemo: '',\n\t\t\t\t};\n\t\t\t\tconst updatedCompanyInfoList: CompanyInfoType[] = companyInfoList;\n\t\t\t\tupdatedCompanyInfoList.push(CompanyInfo);\n\t\t\t\tupdateCompanyInfoList(updatedCompanyInfoList);\n\t\t\t\tconst findCompany: CompanyType | undefined = companyList.find(\n\t\t\t\t\t(item) => item.id === id\n\t\t\t\t);\n\t\t\t\tif (!findCompany && company) {\n\t\t\t\t\tconst updatedCompanyList: CompanyType[] = companyList;\n\t\t\t\t\tupdatedCompanyList.push(company);\n\t\t\t\t\tupdateCompanyList(updatedCompanyList);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\thandleRegisterCompanyInfo();\n\t\thandleUser();\n\t\tif (company) {\n\t\t\talert(`${company.name}を登録しました`);\n\t\t}\n\n\t\tnavigate('/pages/company/searchCompany');\n\t};\n\tconst handleReturn = () => {\n\t\tnavigate('/pages/company/searchCompany');\n\t};\n\tif (typeof company !== 'undefined') {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>{company.name}</h1>\n\t\t\t\t<h2>概要</h2>\n\t\t\t\t<div>{company.abstract}</div>\n\t\t\t\t<h2>業種</h2>\n\t\t\t\t<div>{company.industries.join(',')}</div>\n\t\t\t\t<h2>勤務地</h2>\n\t\t\t\t<div>{company.locations.join(',')}</div>\n\t\t\t\t<button onClick={() => handleAdd()}>登録</button>\n\t\t\t\t<button onClick={() => handleReturn()}>戻る</button>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <div></div>;\n\t}\n}\n\nexport default CompanyDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}