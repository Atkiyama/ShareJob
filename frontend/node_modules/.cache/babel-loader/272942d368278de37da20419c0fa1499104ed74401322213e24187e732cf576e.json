{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header';\nimport Home from './pages/home';\nimport Top from './pages/top';\nimport Login from './pages/user/login';\nimport Logout from './pages/user/logout';\nimport Register from './pages/user/register';\nimport EditMemo from './pages/myCompany/editMemo';\nimport EditUser from './pages/user/editUser';\nimport SearchCompany from './pages/company/searchCompany';\nimport CompanyRegister from './pages/company/companyRegister';\nimport CompanyList from './pages/company/companyList';\nimport CompanyEdit from './pages/company/companyEdit';\nimport CompanyAdd from './pages/company/companyAdd';\nimport useToken from './utils/useToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /**\n   * ログインしているユーザの情報\n   */\n\n  const [user, setUser] = useState({\n    name: '',\n    email: ''\n  });\n  const token = useToken();\n  /**\n   * ユーザの企業メモ\n   */\n  const [myCompanyList, setMyCompanyList] = useState([]);\n  /**\n   * メモを登録している企業のリスト\n   */\n  const [companyList, setCompanyList] = useState([]);\n  /**\n   * 自分で登録した企業のリスト\n   */\n  const [registerCompanyList, setRegisterCompanyList] = useState([]);\n  /**\n   * 検索した企業のリスト\n   */\n  const [searchedCompany, setSearchedCompany] = useState([]);\n\n  /**\n   * 以下、下位のコンポーネントで各変数を更新するための関数\n   * @param updatedUser\n   */\n\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n  };\n  const updateMyCompanyList = updatedMyCompanyList => {\n    setMyCompanyList(updatedMyCompanyList);\n  };\n  const updateCompanyList = updatedCompanyList => {\n    setCompanyList(updatedCompanyList);\n  };\n  const updateRegisterCompanyList = updatedRegisterCompanyList => {\n    setRegisterCompanyList(updatedRegisterCompanyList);\n  };\n  const updateSearchCompanyList = updatedSearchedCompanyList => {\n    setSearchedCompany(updatedSearchedCompanyList);\n  };\n\n  /**\n   *企業メモのリストを取得する\n   */\n  const handleMyCompanyList = async () => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BASE_URL + `myCompany/getMyCompanyList?email=${user.email}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const jsonResponse = await response.json();\n      const jsonMyCompanyList = jsonResponse.myCompanyList;\n      updateMyCompanyList(jsonMyCompanyList);\n    } catch (err) {\n      alert('企業情報の取得に失敗しました\\n' + err);\n      console.log(err);\n    }\n  };\n  /**\n   *メモを登録している企業のリストを取得する\n   */\n  const handleCompanyList = async () => {\n    try {\n      const ids = myCompanyList.map(info => info.id);\n      const joinedString = ids.join(',');\n      const encodedIds = encodeURIComponent(joinedString);\n      const req = process.env.REACT_APP_BASE_URL + `company/getCompanyList?ids=${encodedIds}`;\n      const response = await fetch(req, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const jsonResponse = await response.json();\n      const jsonCompanyList = jsonResponse.companyList;\n      updateCompanyList(jsonCompanyList);\n    } catch (err) {\n      alert('企業情報の取得に失敗しました\\n' + err);\n      console.log(err);\n    }\n  };\n  const handleRegisterCompanyList = async () => {\n    try {\n      const response = await fetch(process.env.REACT_APP_BASE_URL + `company/getRegisterCompanyList?email=${user.email}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const jsonResponse = await response.json();\n      const jsonMyCompanyList = jsonResponse.myCompanyList;\n      updateRegisterCompanyList(jsonMyCompanyList);\n    } catch (err) {\n      alert('企業情報の取得に失敗しました\\n' + err);\n      console.log(err);\n    }\n  };\n  const handleUser = async () => {\n    if (token) {\n      const updatedUser = {\n        name: token.name,\n        email: token.email\n      };\n      // console.log(token.email);\n      // console.log(token.name);\n      updateUser(updatedUser);\n    }\n  };\n  const handleUpdate = async () => {\n    await handleMyCompanyList();\n    await handleCompanyList();\n    await handleRegisterCompanyList();\n  };\n  /**\n   * companyInfoListを取得する\n   */\n  useEffect(() => {\n    document.title = 'ShareJob';\n    if (user.email !== '') {\n      handleUser();\n      handleMyCompanyList();\n    }\n  }, [user.email]);\n\n  /**\n   * companyListを取得する\n   */\n  useEffect(() => {\n    if (user.email !== '' && myCompanyList.length > 0) {\n      handleUser();\n      handleCompanyList();\n    }\n  }, [user.email, myCompanyList]);\n\n  /**\n   * 常にユーザ以外の情報を更新する\n   */\n  useEffect(() => {\n    if (user.email !== '') {\n      handleUser();\n      handleUpdate();\n    }\n  }, []);\n\n  /**\n   * 常にユーザ以外の情報を更新する\n   */\n  useEffect(() => {\n    if (user.email !== '') {\n      if (token) {\n        const updatedUser = {\n          name: token.name,\n          email: token.email\n        };\n        // console.log(token.email);\n        // console.log(token.name);\n        updateUser(updatedUser);\n      }\n      handleUpdate();\n    }\n  }, [token, user.email]);\n\n  /**\n   * 各コンポーネントをルーティングする\n   */\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"email: \", token.email, \",user\", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"name: \", token.name, \",user\", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Top, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/home\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            user: user,\n            myCompanyList: myCompanyList,\n            companyList: companyList,\n            updateCompanyList: updateCompanyList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/user/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            handleMyCompanyList: handleMyCompanyList,\n            handleCompanyList: handleCompanyList,\n            updateUser: updateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/user/logout\",\n          element: /*#__PURE__*/_jsxDEV(Logout, {\n            user: user,\n            updateUser: updateUser,\n            updateCompanyList: updateCompanyList,\n            updateMyCompanyList: updateMyCompanyList,\n            updateSearchCompanyList: updateSearchCompanyList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/user/editUser\",\n          element: /*#__PURE__*/_jsxDEV(EditUser, {\n            user: user,\n            updateUser: updateUser,\n            updateCompanyList: updateCompanyList,\n            updateMyCompanyList: updateMyCompanyList,\n            handleUpdate: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/user/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/myCompany/myCompany/:email/:id\",\n          element: /*#__PURE__*/_jsxDEV(EditMemo, {\n            companyList: companyList,\n            myCompanyList: myCompanyList,\n            updateMyCompanyList: updateMyCompanyList,\n            handleUpdate: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/company/searchCompany\",\n          element: /*#__PURE__*/_jsxDEV(SearchCompany, {\n            searchedCompany: searchedCompany,\n            updateSearchCompanyList: updateSearchCompanyList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/company/companyList\",\n          element: /*#__PURE__*/_jsxDEV(CompanyList, {\n            user: user,\n            registerCompanyList: registerCompanyList,\n            updateRegisterCompanyList: updateRegisterCompanyList,\n            handleUpdate: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/company/companyEdit/:id\",\n          element: /*#__PURE__*/_jsxDEV(CompanyEdit, {\n            registerCompanyList: registerCompanyList,\n            handleUpdate: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/company/companyRegister\",\n          element: /*#__PURE__*/_jsxDEV(CompanyRegister, {\n            user: user,\n            handleUpdate: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/company/companyAdd/:id\",\n          element: /*#__PURE__*/_jsxDEV(CompanyAdd, {\n            user: user,\n            searchedCompanyList: searchedCompany,\n            handleUpdate: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Page Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"K2n0YF2rEa7H2m48tFVVUP82kVw=\", false, function () {\n  return [useToken];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Routes","BrowserRouter","Header","Home","Top","Login","Logout","Register","EditMemo","EditUser","SearchCompany","CompanyRegister","CompanyList","CompanyEdit","CompanyAdd","useToken","jsxDEV","_jsxDEV","App","_s","user","setUser","name","email","token","myCompanyList","setMyCompanyList","companyList","setCompanyList","registerCompanyList","setRegisterCompanyList","searchedCompany","setSearchedCompany","updateUser","updatedUser","updateMyCompanyList","updatedMyCompanyList","updateCompanyList","updatedCompanyList","updateRegisterCompanyList","updatedRegisterCompanyList","updateSearchCompanyList","updatedSearchedCompanyList","handleMyCompanyList","response","fetch","process","env","REACT_APP_BASE_URL","method","headers","authorization","localStorage","getItem","jsonResponse","json","jsonMyCompanyList","err","alert","console","log","handleCompanyList","ids","map","info","id","joinedString","join","encodedIds","encodeURIComponent","req","jsonCompanyList","handleRegisterCompanyList","handleUser","handleUpdate","document","title","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","searchedCompanyList","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport './App.css';\n\nimport Header from './components/header';\nimport Home from './pages/home';\nimport Top from './pages/top';\nimport Login from './pages/user/login';\nimport Logout from './pages/user/logout';\nimport Register from './pages/user/register';\nimport EditMemo from './pages/myCompany/editMemo';\nimport EditUser from './pages/user/editUser';\nimport SearchCompany from './pages/company/searchCompany';\nimport CompanyRegister from './pages/company/companyRegister';\nimport CompanyList from './pages/company/companyList';\nimport CompanyEdit from './pages/company/companyEdit';\n\nimport { UserType, MyCompanyType, CompanyType } from './utils/types';\nimport CompanyAdd from './pages/company/companyAdd';\nimport useToken from './utils/useToken';\n\nfunction App() {\n\t/**\n\t * ログインしているユーザの情報\n\t */\n\n\tconst [user, setUser] = useState<UserType>({\n\t\tname: '',\n\t\temail: '',\n\t});\n\tconst token: UserType = useToken();\n\t/**\n\t * ユーザの企業メモ\n\t */\n\tconst [myCompanyList, setMyCompanyList] = useState<MyCompanyType[]>([]);\n\t/**\n\t * メモを登録している企業のリスト\n\t */\n\tconst [companyList, setCompanyList] = useState<CompanyType[]>([]);\n\t/**\n\t * 自分で登録した企業のリスト\n\t */\n\tconst [registerCompanyList, setRegisterCompanyList] = useState<CompanyType[]>(\n\t\t[]\n\t);\n\t/**\n\t * 検索した企業のリスト\n\t */\n\tconst [searchedCompany, setSearchedCompany] = useState<CompanyType[]>([]);\n\n\t/**\n\t * 以下、下位のコンポーネントで各変数を更新するための関数\n\t * @param updatedUser\n\t */\n\n\tconst updateUser = (updatedUser: UserType) => {\n\t\tsetUser(updatedUser);\n\t};\n\n\tconst updateMyCompanyList = (updatedMyCompanyList: MyCompanyType[]) => {\n\t\tsetMyCompanyList(updatedMyCompanyList);\n\t};\n\n\tconst updateCompanyList = (updatedCompanyList: CompanyType[]) => {\n\t\tsetCompanyList(updatedCompanyList);\n\t};\n\n\tconst updateRegisterCompanyList = (\n\t\tupdatedRegisterCompanyList: CompanyType[]\n\t) => {\n\t\tsetRegisterCompanyList(updatedRegisterCompanyList);\n\t};\n\n\tconst updateSearchCompanyList = (\n\t\tupdatedSearchedCompanyList: CompanyType[]\n\t) => {\n\t\tsetSearchedCompany(updatedSearchedCompanyList);\n\t};\n\n\t/**\n\t *企業メモのリストを取得する\n\t */\n\tconst handleMyCompanyList = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\tprocess.env.REACT_APP_BASE_URL! +\n\t\t\t\t\t`myCompany/getMyCompanyList?email=${user.email}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\tauthorization: `Bearer ${localStorage.getItem('token')}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tconst jsonMyCompanyList = jsonResponse.myCompanyList;\n\t\t\tupdateMyCompanyList(jsonMyCompanyList);\n\t\t} catch (err) {\n\t\t\talert('企業情報の取得に失敗しました\\n' + err);\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\t/**\n\t *メモを登録している企業のリストを取得する\n\t */\n\tconst handleCompanyList = async () => {\n\t\ttry {\n\t\t\tconst ids: string[] = myCompanyList.map((info) => info.id);\n\t\t\tconst joinedString = ids.join(',');\n\t\t\tconst encodedIds = encodeURIComponent(joinedString);\n\t\t\tconst req =\n\t\t\t\tprocess.env.REACT_APP_BASE_URL! +\n\t\t\t\t`company/getCompanyList?ids=${encodedIds}`;\n\n\t\t\tconst response = await fetch(req, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tauthorization: `Bearer ${localStorage.getItem('token')}`,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tconst jsonCompanyList = jsonResponse.companyList;\n\n\t\t\tupdateCompanyList(jsonCompanyList);\n\t\t} catch (err) {\n\t\t\talert('企業情報の取得に失敗しました\\n' + err);\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\tconst handleRegisterCompanyList = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\tprocess.env.REACT_APP_BASE_URL! +\n\t\t\t\t\t`company/getRegisterCompanyList?email=${user.email}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\tauthorization: `Bearer ${localStorage.getItem('token')}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tconst jsonMyCompanyList = jsonResponse.myCompanyList;\n\t\t\tupdateRegisterCompanyList(jsonMyCompanyList);\n\t\t} catch (err) {\n\t\t\talert('企業情報の取得に失敗しました\\n' + err);\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\tconst handleUser = async () => {\n\t\tif (token) {\n\t\t\tconst updatedUser: UserType = {\n\t\t\t\tname: token.name,\n\t\t\t\temail: token.email,\n\t\t\t};\n\t\t\t// console.log(token.email);\n\t\t\t// console.log(token.name);\n\t\t\tupdateUser(updatedUser);\n\t\t}\n\t};\n\n\tconst handleUpdate = async () => {\n\t\tawait handleMyCompanyList();\n\t\tawait handleCompanyList();\n\t\tawait handleRegisterCompanyList();\n\t};\n\t/**\n\t * companyInfoListを取得する\n\t */\n\tuseEffect(() => {\n\t\tdocument.title = 'ShareJob';\n\t\tif (user.email !== '') {\n\t\t\thandleUser();\n\t\t\thandleMyCompanyList();\n\t\t}\n\t}, [user.email]);\n\n\t/**\n\t * companyListを取得する\n\t */\n\tuseEffect(() => {\n\t\tif (user.email !== '' && myCompanyList.length > 0) {\n\t\t\thandleUser();\n\t\t\thandleCompanyList();\n\t\t}\n\t}, [user.email, myCompanyList]);\n\n\t/**\n\t * 常にユーザ以外の情報を更新する\n\t */\n\tuseEffect(() => {\n\t\tif (user.email !== '') {\n\t\t\thandleUser();\n\t\t\thandleUpdate();\n\t\t}\n\t}, []);\n\n\t/**\n\t * 常にユーザ以外の情報を更新する\n\t */\n\tuseEffect(() => {\n\t\tif (user.email !== '') {\n\t\t\tif (token) {\n\t\t\t\tconst updatedUser: UserType = {\n\t\t\t\t\tname: token.name,\n\t\t\t\t\temail: token.email,\n\t\t\t\t};\n\t\t\t\t// console.log(token.email);\n\t\t\t\t// console.log(token.name);\n\t\t\t\tupdateUser(updatedUser);\n\t\t\t}\n\t\t\thandleUpdate();\n\t\t}\n\t}, [token, user.email]);\n\n\t/**\n\t * 各コンポーネントをルーティングする\n\t */\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"container\">\n\t\t\t\t<Header />\n\t\t\t\t<p>\n\t\t\t\t\temail: {token.email},user{user.email}\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tname: {token.name},user{user.name}\n\t\t\t\t</p>\n\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"/\" element={<Top />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/home\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Home\n\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\tmyCompanyList={myCompanyList}\n\t\t\t\t\t\t\t\tcompanyList={companyList}\n\t\t\t\t\t\t\t\tupdateCompanyList={updateCompanyList}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/user/login\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Login\n\t\t\t\t\t\t\t\thandleMyCompanyList={handleMyCompanyList}\n\t\t\t\t\t\t\t\thandleCompanyList={handleCompanyList}\n\t\t\t\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/user/logout\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Logout\n\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\t\t\t\tupdateCompanyList={updateCompanyList}\n\t\t\t\t\t\t\t\tupdateMyCompanyList={updateMyCompanyList}\n\t\t\t\t\t\t\t\tupdateSearchCompanyList={updateSearchCompanyList}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/user/editUser\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<EditUser\n\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\t\t\t\tupdateCompanyList={updateCompanyList}\n\t\t\t\t\t\t\t\tupdateMyCompanyList={updateMyCompanyList}\n\t\t\t\t\t\t\t\thandleUpdate={handleUpdate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/pages/user/register\" element={<Register />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/myCompany/myCompany/:email/:id\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<EditMemo\n\t\t\t\t\t\t\t\tcompanyList={companyList}\n\t\t\t\t\t\t\t\tmyCompanyList={myCompanyList}\n\t\t\t\t\t\t\t\tupdateMyCompanyList={updateMyCompanyList}\n\t\t\t\t\t\t\t\thandleUpdate={handleUpdate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/company/searchCompany\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<SearchCompany\n\t\t\t\t\t\t\t\tsearchedCompany={searchedCompany}\n\t\t\t\t\t\t\t\tupdateSearchCompanyList={updateSearchCompanyList}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/company/companyList\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<CompanyList\n\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\tregisterCompanyList={registerCompanyList}\n\t\t\t\t\t\t\t\tupdateRegisterCompanyList={updateRegisterCompanyList}\n\t\t\t\t\t\t\t\thandleUpdate={handleUpdate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/company/companyEdit/:id\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<CompanyEdit\n\t\t\t\t\t\t\t\tregisterCompanyList={registerCompanyList}\n\t\t\t\t\t\t\t\thandleUpdate={handleUpdate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/company/companyRegister\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<CompanyRegister user={user} handleUpdate={handleUpdate} />\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/company/companyAdd/:id\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<CompanyAdd\n\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\tsearchedCompanyList={searchedCompany}\n\t\t\t\t\t\t\t\thandleUpdate={handleUpdate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route path=\"*\" element={<h1>Page Not Found</h1>} />\n\t\t\t\t</Routes>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,MAAM,EAAEC,aAAa,QAAQ,kBAAkB;AAC/D,OAAO,WAAW;AAElB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,GAAG,MAAM,aAAa;AAC7B,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,WAAW,MAAM,6BAA6B;AAGrD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd;AACD;AACA;;EAEC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAW;IAC1CyB,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACR,CAAC,CAAC;EACF,MAAMC,KAAe,GAAGT,QAAQ,CAAC,CAAC;EAClC;AACD;AACA;EACC,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAkB,EAAE,CAAC;EACvE;AACD;AACA;EACC,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAgB,EAAE,CAAC;EACjE;AACD;AACA;EACC,MAAM,CAACgC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGjC,QAAQ,CAC7D,EACD,CAAC;EACD;AACD;AACA;EACC,MAAM,CAACkC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnC,QAAQ,CAAgB,EAAE,CAAC;;EAEzE;AACD;AACA;AACA;;EAEC,MAAMoC,UAAU,GAAIC,WAAqB,IAAK;IAC7Cb,OAAO,CAACa,WAAW,CAAC;EACrB,CAAC;EAED,MAAMC,mBAAmB,GAAIC,oBAAqC,IAAK;IACtEV,gBAAgB,CAACU,oBAAoB,CAAC;EACvC,CAAC;EAED,MAAMC,iBAAiB,GAAIC,kBAAiC,IAAK;IAChEV,cAAc,CAACU,kBAAkB,CAAC;EACnC,CAAC;EAED,MAAMC,yBAAyB,GAC9BC,0BAAyC,IACrC;IACJV,sBAAsB,CAACU,0BAA0B,CAAC;EACnD,CAAC;EAED,MAAMC,uBAAuB,GAC5BC,0BAAyC,IACrC;IACJV,kBAAkB,CAACU,0BAA0B,CAAC;EAC/C,CAAC;;EAED;AACD;AACA;EACC,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3BC,OAAO,CAACC,GAAG,CAACC,kBAAkB,GAC5B,oCAAmC5B,IAAI,CAACG,KAAM,EAAC,EACjD;QACC0B,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACR,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QACxD;MACD,CACD,CAAC;MAED,MAAMC,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAC1C,MAAMC,iBAAiB,GAAGF,YAAY,CAAC7B,aAAa;MACpDU,mBAAmB,CAACqB,iBAAiB,CAAC;IACvC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACbC,KAAK,CAAC,kBAAkB,GAAGD,GAAG,CAAC;MAC/BE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IACjB;EACD,CAAC;EACD;AACD;AACA;EACC,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACH,MAAMC,GAAa,GAAGrC,aAAa,CAACsC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAAC;MAC1D,MAAMC,YAAY,GAAGJ,GAAG,CAACK,IAAI,CAAC,GAAG,CAAC;MAClC,MAAMC,UAAU,GAAGC,kBAAkB,CAACH,YAAY,CAAC;MACnD,MAAMI,GAAG,GACRxB,OAAO,CAACC,GAAG,CAACC,kBAAkB,GAC7B,8BAA6BoB,UAAW,EAAC;MAE3C,MAAMxB,QAAQ,GAAG,MAAMC,KAAK,CAACyB,GAAG,EAAE;QACjCrB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACR,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QACxD;MACD,CAAC,CAAC;MAEF,MAAMC,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAC1C,MAAMgB,eAAe,GAAGjB,YAAY,CAAC3B,WAAW;MAEhDU,iBAAiB,CAACkC,eAAe,CAAC;IACnC,CAAC,CAAC,OAAOd,GAAG,EAAE;MACbC,KAAK,CAAC,kBAAkB,GAAGD,GAAG,CAAC;MAC/BE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IACjB;EACD,CAAC;EAED,MAAMe,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC7C,IAAI;MACH,MAAM5B,QAAQ,GAAG,MAAMC,KAAK,CAC3BC,OAAO,CAACC,GAAG,CAACC,kBAAkB,GAC5B,wCAAuC5B,IAAI,CAACG,KAAM,EAAC,EACrD;QACC0B,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACR,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QACxD;MACD,CACD,CAAC;MAED,MAAMC,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAC1C,MAAMC,iBAAiB,GAAGF,YAAY,CAAC7B,aAAa;MACpDc,yBAAyB,CAACiB,iBAAiB,CAAC;IAC7C,CAAC,CAAC,OAAOC,GAAG,EAAE;MACbC,KAAK,CAAC,kBAAkB,GAAGD,GAAG,CAAC;MAC/BE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IACjB;EACD,CAAC;EACD,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIjD,KAAK,EAAE;MACV,MAAMU,WAAqB,GAAG;QAC7BZ,IAAI,EAAEE,KAAK,CAACF,IAAI;QAChBC,KAAK,EAAEC,KAAK,CAACD;MACd,CAAC;MACD;MACA;MACAU,UAAU,CAACC,WAAW,CAAC;IACxB;EACD,CAAC;EAED,MAAMwC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAM/B,mBAAmB,CAAC,CAAC;IAC3B,MAAMkB,iBAAiB,CAAC,CAAC;IACzB,MAAMW,yBAAyB,CAAC,CAAC;EAClC,CAAC;EACD;AACD;AACA;EACC1E,SAAS,CAAC,MAAM;IACf6E,QAAQ,CAACC,KAAK,GAAG,UAAU;IAC3B,IAAIxD,IAAI,CAACG,KAAK,KAAK,EAAE,EAAE;MACtBkD,UAAU,CAAC,CAAC;MACZ9B,mBAAmB,CAAC,CAAC;IACtB;EACD,CAAC,EAAE,CAACvB,IAAI,CAACG,KAAK,CAAC,CAAC;;EAEhB;AACD;AACA;EACCzB,SAAS,CAAC,MAAM;IACf,IAAIsB,IAAI,CAACG,KAAK,KAAK,EAAE,IAAIE,aAAa,CAACoD,MAAM,GAAG,CAAC,EAAE;MAClDJ,UAAU,CAAC,CAAC;MACZZ,iBAAiB,CAAC,CAAC;IACpB;EACD,CAAC,EAAE,CAACzC,IAAI,CAACG,KAAK,EAAEE,aAAa,CAAC,CAAC;;EAE/B;AACD;AACA;EACC3B,SAAS,CAAC,MAAM;IACf,IAAIsB,IAAI,CAACG,KAAK,KAAK,EAAE,EAAE;MACtBkD,UAAU,CAAC,CAAC;MACZC,YAAY,CAAC,CAAC;IACf;EACD,CAAC,EAAE,EAAE,CAAC;;EAEN;AACD;AACA;EACC5E,SAAS,CAAC,MAAM;IACf,IAAIsB,IAAI,CAACG,KAAK,KAAK,EAAE,EAAE;MACtB,IAAIC,KAAK,EAAE;QACV,MAAMU,WAAqB,GAAG;UAC7BZ,IAAI,EAAEE,KAAK,CAACF,IAAI;UAChBC,KAAK,EAAEC,KAAK,CAACD;QACd,CAAC;QACD;QACA;QACAU,UAAU,CAACC,WAAW,CAAC;MACxB;MACAwC,YAAY,CAAC,CAAC;IACf;EACD,CAAC,EAAE,CAAClD,KAAK,EAAEJ,IAAI,CAACG,KAAK,CAAC,CAAC;;EAEvB;AACD;AACA;EACC,oBACCN,OAAA,CAAChB,aAAa;IAAA6E,QAAA,eACb7D,OAAA;MAAK8D,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACzB7D,OAAA,CAACf,MAAM;QAAA8E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVlE,OAAA;QAAA6D,QAAA,GAAG,SACK,EAACtD,KAAK,CAACD,KAAK,EAAC,OAAK,EAACH,IAAI,CAACG,KAAK;MAAA;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACJlE,OAAA;QAAA6D,QAAA,GAAG,QACI,EAACtD,KAAK,CAACF,IAAI,EAAC,OAAK,EAACF,IAAI,CAACE,IAAI;MAAA;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eAEJlE,OAAA,CAACjB,MAAM;QAAA8E,QAAA,gBACN7D,OAAA,CAAClB,KAAK;UAACqF,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEpE,OAAA,CAACb,GAAG;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpClE,OAAA,CAAClB,KAAK;UACLqF,IAAI,EAAC,aAAa;UAClBC,OAAO,eACNpE,OAAA,CAACd,IAAI;YACJiB,IAAI,EAAEA,IAAK;YACXK,aAAa,EAAEA,aAAc;YAC7BE,WAAW,EAAEA,WAAY;YACzBU,iBAAiB,EAAEA;UAAkB;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QACD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACFlE,OAAA,CAAClB,KAAK;UACLqF,IAAI,EAAC,mBAAmB;UACxBC,OAAO,eACNpE,OAAA,CAACZ,KAAK;YACLsC,mBAAmB,EAAEA,mBAAoB;YACzCkB,iBAAiB,EAAEA,iBAAkB;YACrC5B,UAAU,EAAEA;UAAW;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB;QACD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACFlE,OAAA,CAAClB,KAAK;UACLqF,IAAI,EAAC,oBAAoB;UACzBC,OAAO,eACNpE,OAAA,CAACX,MAAM;YACNc,IAAI,EAAEA,IAAK;YACXa,UAAU,EAAEA,UAAW;YACvBI,iBAAiB,EAAEA,iBAAkB;YACrCF,mBAAmB,EAAEA,mBAAoB;YACzCM,uBAAuB,EAAEA;UAAwB;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD;QACD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACFlE,OAAA,CAAClB,KAAK;UACLqF,IAAI,EAAC,sBAAsB;UAC3BC,OAAO,eACNpE,OAAA,CAACR,QAAQ;YACRW,IAAI,EAAEA,IAAK;YACXa,UAAU,EAAEA,UAAW;YACvBI,iBAAiB,EAAEA,iBAAkB;YACrCF,mBAAmB,EAAEA,mBAAoB;YACzCuC,YAAY,EAAEA;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QACD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACFlE,OAAA,CAAClB,KAAK;UAACqF,IAAI,EAAC,sBAAsB;UAACC,OAAO,eAAEpE,OAAA,CAACV,QAAQ;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5DlE,OAAA,CAAClB,KAAK;UACLqF,IAAI,EAAC,uCAAuC;UAC5CC,OAAO,eACNpE,OAAA,CAACT,QAAQ;YACRmB,WAAW,EAAEA,WAAY;YACzBF,aAAa,EAAEA,aAAc;YAC7BU,mBAAmB,EAAEA,mBAAoB;YACzCuC,YAAY,EAAEA;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QACD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACFlE,OAAA,CAAClB,KAAK;UACLqF,IAAI,EAAC,8BAA8B;UACnCC,OAAO,eACNpE,OAAA,CAACP,aAAa;YACbqB,eAAe,EAAEA,eAAgB;YACjCU,uBAAuB,EAAEA;UAAwB;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD;QACD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAEFlE,OAAA,CAAClB,KAAK;UACLqF,IAAI,EAAC,4BAA4B;UACjCC,OAAO,eACNpE,OAAA,CAACL,WAAW;YACXQ,IAAI,EAAEA,IAAK;YACXS,mBAAmB,EAAEA,mBAAoB;YACzCU,yBAAyB,EAAEA,yBAA0B;YACrDmC,YAAY,EAAEA;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QACD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACFlE,OAAA,CAAClB,KAAK;UACLqF,IAAI,EAAC,gCAAgC;UACrCC,OAAO,eACNpE,OAAA,CAACJ,WAAW;YACXgB,mBAAmB,EAAEA,mBAAoB;YACzC6C,YAAY,EAAEA;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QACD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACFlE,OAAA,CAAClB,KAAK;UACLqF,IAAI,EAAC,gCAAgC;UACrCC,OAAO,eACNpE,OAAA,CAACN,eAAe;YAACS,IAAI,EAAEA,IAAK;YAACsD,YAAY,EAAEA;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAC1D;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACFlE,OAAA,CAAClB,KAAK;UACLqF,IAAI,EAAC,+BAA+B;UACpCC,OAAO,eACNpE,OAAA,CAACH,UAAU;YACVM,IAAI,EAAEA,IAAK;YACXkE,mBAAmB,EAAEvD,eAAgB;YACrC2C,YAAY,EAAEA;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QACD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAEFlE,OAAA,CAAClB,KAAK;UAACqF,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEpE,OAAA;YAAA6D,QAAA,EAAI;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAElB;AAAChE,EAAA,CAtUQD,GAAG;EAAA,QASaH,QAAQ;AAAA;AAAAwE,EAAA,GATxBrE,GAAG;AAwUZ,eAAeA,GAAG;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}