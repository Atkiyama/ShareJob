{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport Header from './components/header';\nimport Home from './pages/home';\nimport Top from './pages/top';\nimport Login from './pages/user/login';\nimport Logout from './pages/user/logout';\nimport Register from './pages/user/register';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    companyInfoList: []\n  });\n  const [companyInfoList, setCompanyInfoList] = useState([]);\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n  };\n  const updateCompanyInfoList = updateCompanyInfoList => {\n    setCompanyInfoList(updateCompanyInfoList);\n  };\n  useEffect(() => {\n    const handleCompanyInfoList = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/companyInfo/getCompanyInfoList', {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: user.email\n          })\n        });\n        const jsonResponse = await response.json();\n        const jsonCompanyInfoList = jsonResponse.CompanyInfoList;\n        const formattedList = [];\n        for (let i = 0; i < jsonCompanyInfoList.length; i++) {\n          const companyInfo = {\n            email: jsonCompanyInfoList[i].email,\n            id: jsonCompanyInfoList[i].id,\n            memo: jsonCompanyInfoList[i].memo\n          };\n          formattedList.push(companyInfo);\n        }\n        updateCompanyInfoList(formattedList);\n      } catch (err) {\n        console.log('企業情報の取得に失敗しました\\n' + err);\n      }\n    };\n    handleCompanyInfoList();\n  }, [user.email, companyInfoList]);\n  const handleCompanyInfoList = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/companyInfo/getCompanyInfoList', {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: user.email\n        })\n      });\n      const jsonResponse = await response.json();\n      const jsonCompanyInfoList = jsonResponse.CompanyInfoList;\n      const formattedList = [];\n      for (let i = 0; i < jsonCompanyInfoList.length; i++) {\n        const companyInfo = {\n          email: jsonCompanyInfoList[i].email,\n          id: jsonCompanyInfoList[i].id,\n          memo: jsonCompanyInfoList[i].memo\n        };\n        formattedList.push(companyInfo);\n      }\n      updateCompanyInfoList(formattedList);\n    } catch (err) {\n      console.log('企業情報の取得に失敗しました\\n' + err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Top, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/home\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            user: user,\n            companyInfoList: companyInfoList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/user/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            updateUser: updateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/user/logout\",\n          element: /*#__PURE__*/_jsxDEV(Logout, {\n            updateUser: updateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/user/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Page Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"8Y/DAS2IxtN0Cdx2bw26r0UVrcs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Route","Routes","BrowserRouter","Header","Home","Top","Login","Logout","Register","jsxDEV","_jsxDEV","App","_s","user","setUser","name","email","companyInfoList","setCompanyInfoList","updateUser","updatedUser","updateCompanyInfoList","handleCompanyInfoList","response","fetch","method","headers","Accept","body","JSON","stringify","jsonResponse","json","jsonCompanyInfoList","CompanyInfoList","formattedList","i","length","companyInfo","id","memo","push","err","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/App.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport Header from './components/header';\nimport Home from './pages/home';\nimport Top from './pages/top';\nimport Login from './pages/user/login';\nimport Logout from './pages/user/logout';\nimport Register from './pages/user/register';\nimport './App.css';\nimport { UserType, CompanyInfoType } from './utils/types';\nimport { Company } from '../../backend/src/model/company';\n\nfunction App() {\n\tconst [user, setUser] = useState<UserType>({\n\t\tname: '',\n\t\temail: '',\n\t\tcompanyInfoList: [],\n\t});\n\n\tconst [companyInfoList, setCompanyInfoList] = useState<CompanyInfoType[]>([]);\n\n\tconst updateUser = (updatedUser: UserType) => {\n\t\tsetUser(updatedUser);\n\t};\n\n\tconst updateCompanyInfoList = (updateCompanyInfoList: CompanyInfoType[]) => {\n\t\tsetCompanyInfoList(updateCompanyInfoList);\n\t};\n\n\tuseEffect(() => {\n\t\tconst handleCompanyInfoList = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t'http://localhost:5000/companyInfo/getCompanyInfoList',\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\temail: user.email,\n\t\t\t\t\t\t}),\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst jsonResponse = await response.json();\n\t\t\t\tconst jsonCompanyInfoList = jsonResponse.CompanyInfoList;\n\t\t\t\tconst formattedList: CompanyInfoType[] = [];\n\t\t\t\tfor (let i = 0; i < jsonCompanyInfoList.length; i++) {\n\t\t\t\t\tconst companyInfo = {\n\t\t\t\t\t\temail: jsonCompanyInfoList[i].email,\n\t\t\t\t\t\tid: jsonCompanyInfoList[i].id,\n\t\t\t\t\t\tmemo: jsonCompanyInfoList[i].memo,\n\t\t\t\t\t};\n\t\t\t\t\tformattedList.push(companyInfo);\n\t\t\t\t}\n\t\t\t\tupdateCompanyInfoList(formattedList);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('企業情報の取得に失敗しました\\n' + err);\n\t\t\t}\n\t\t};\n\t\thandleCompanyInfoList();\n\t}, [user.email, companyInfoList]);\n\n\tconst handleCompanyInfoList = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'http://localhost:5000/companyInfo/getCompanyInfoList',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\temail: user.email,\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tconst jsonCompanyInfoList = jsonResponse.CompanyInfoList;\n\t\t\tconst formattedList: CompanyInfoType[] = [];\n\t\t\tfor (let i = 0; i < jsonCompanyInfoList.length; i++) {\n\t\t\t\tconst companyInfo = {\n\t\t\t\t\temail: jsonCompanyInfoList[i].email,\n\t\t\t\t\tid: jsonCompanyInfoList[i].id,\n\t\t\t\t\tmemo: jsonCompanyInfoList[i].memo,\n\t\t\t\t};\n\t\t\t\tformattedList.push(companyInfo);\n\t\t\t}\n\t\t\tupdateCompanyInfoList(formattedList);\n\t\t} catch (err) {\n\t\t\tconsole.log('企業情報の取得に失敗しました\\n' + err);\n\t\t}\n\t};\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"container\">\n\t\t\t\t<Header />\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"/\" element={<Top />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/home\"\n\t\t\t\t\t\telement={<Home user={user} companyInfoList={companyInfoList} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/user/login\"\n\t\t\t\t\t\telement={<Login updateUser={updateUser} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/pages/user/logout\"\n\t\t\t\t\t\telement={<Logout updateUser={updateUser} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/pages/user/register\" element={<Register />} />\n\t\t\t\t\t<Route path=\"*\" element={<h1>Page Not Found</h1>} />\n\t\t\t\t</Routes>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}