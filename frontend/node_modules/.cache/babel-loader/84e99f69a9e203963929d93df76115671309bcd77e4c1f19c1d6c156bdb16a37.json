{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/companyDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyDetail(_ref) {\n  _s();\n  let {\n    searchedCompany,\n    user,\n    companyList,\n    companyInfoList,\n    updateUser,\n    updateCompanyList,\n    updateCompanyInfoList\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [company, setCompany] = useState();\n  useEffect(() => {\n    const foundCompany = searchedCompany.find(item => item.id === id);\n    if (foundCompany) {\n      setCompany(foundCompany);\n      if (typeof company !== 'undefined') {\n        document.title = `${company.name}`;\n      }\n    }\n  });\n  const handleUpdateCompanyInfo = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/companyInfo/updateCompanyInfo/${user.email}/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          memo: ''\n        })\n      });\n      const jsonResponse = await response.json();\n    } catch (err) {\n      alert('更新に失敗しました');\n    }\n  };\n  const handleAdd = () => {\n    const findId = user.companyInfoList.find(item => item === id);\n    if (!findId) {\n      const companyInfoListSt = user.companyInfoList;\n      if (typeof id === 'string') {\n        companyInfoListSt.push(id);\n      }\n      const updatedUser = {\n        name: user.name,\n        email: user.email,\n        companyInfoList: companyInfoListSt\n      };\n      updateUser(updatedUser);\n      if (id) {\n        const CompanyInfo = {\n          email: user.email,\n          id: id,\n          memo: ''\n        };\n        const updatedCompanyInfoList = companyInfoList;\n        updatedCompanyInfoList.push(CompanyInfo);\n        updateCompanyInfoList(updatedCompanyInfoList);\n        const findCompany = companyList.find(item => item.id === id);\n        if (!findCompany && company) {\n          const updatedCompanyList = companyList;\n          updatedCompanyList.push(company);\n          updateCompanyList(updatedCompanyList);\n        }\n      }\n    }\n    handleUpdateCompanyInfo();\n    navigate('/pages/company/searchCompany');\n  };\n  const handleReturn = () => {\n    navigate('/pages/company/searchCompany');\n  };\n  if (typeof company !== 'undefined') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: company.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u6982\\u8981\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: company.abstract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u696D\\u7A2E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: company.industries.join(',')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u52E4\\u52D9\\u5730\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: company.locations.join(',')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAdd(),\n        children: \"\\u767B\\u9332\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleReturn(),\n        children: \"\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 10\n    }, this);\n  }\n}\n_s(CompanyDetail, \"HdyNK+0ufGtU2emPGW5kdv8lLlY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CompanyDetail;\nexport default CompanyDetail;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetail\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","CompanyDetail","_ref","_s","searchedCompany","user","companyList","companyInfoList","updateUser","updateCompanyList","updateCompanyInfoList","id","navigate","company","setCompany","foundCompany","find","item","document","title","name","handleUpdateCompanyInfo","response","fetch","email","method","headers","body","JSON","stringify","memo","jsonResponse","json","err","alert","handleAdd","findId","companyInfoListSt","push","updatedUser","CompanyInfo","updatedCompanyInfoList","findCompany","updatedCompanyList","handleReturn","children","fileName","_jsxFileName","lineNumber","columnNumber","abstract","industries","join","locations","onClick","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/companyDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n\tCompanyDetailProps,\n\tCompanyInfoType,\n\tCompanyType,\n} from '../../utils/types';\n\nfunction CompanyDetail({\n\tsearchedCompany,\n\tuser,\n\tcompanyList,\n\tcompanyInfoList,\n\tupdateUser,\n\tupdateCompanyList,\n\tupdateCompanyInfoList,\n}: CompanyDetailProps) {\n\tconst { id } = useParams<{ id: string }>();\n\tconst navigate = useNavigate();\n\tconst [company, setCompany] = useState<CompanyType>();\n\tuseEffect(() => {\n\t\tconst foundCompany = searchedCompany.find((item) => item.id === id);\n\n\t\tif (foundCompany) {\n\t\t\tsetCompany(foundCompany);\n\t\t\tif (typeof company !== 'undefined') {\n\t\t\t\tdocument.title = `${company.name}`;\n\t\t\t}\n\t\t}\n\t});\n\tconst handleUpdateCompanyInfo = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`http://localhost:5000/companyInfo/updateCompanyInfo/${user.email}/${id}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tmemo: '',\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst jsonResponse = await response.json();\n\t\t} catch (err) {\n\t\t\talert('更新に失敗しました');\n\t\t}\n\t};\n\tconst handleAdd = () => {\n\t\tconst findId: string | undefined = user.companyInfoList.find(\n\t\t\t(item) => item === id\n\t\t);\n\t\tif (!findId) {\n\t\t\tconst companyInfoListSt = user.companyInfoList;\n\t\t\tif (typeof id === 'string') {\n\t\t\t\tcompanyInfoListSt.push(id);\n\t\t\t}\n\t\t\tconst updatedUser = {\n\t\t\t\tname: user.name,\n\t\t\t\temail: user.email,\n\t\t\t\tcompanyInfoList: companyInfoListSt,\n\t\t\t};\n\t\t\tupdateUser(updatedUser);\n\t\t\tif (id) {\n\t\t\t\tconst CompanyInfo: CompanyInfoType = {\n\t\t\t\t\temail: user.email,\n\t\t\t\t\tid: id,\n\t\t\t\t\tmemo: '',\n\t\t\t\t};\n\t\t\t\tconst updatedCompanyInfoList: CompanyInfoType[] = companyInfoList;\n\t\t\t\tupdatedCompanyInfoList.push(CompanyInfo);\n\t\t\t\tupdateCompanyInfoList(updatedCompanyInfoList);\n\t\t\t\tconst findCompany: CompanyType | undefined = companyList.find(\n\t\t\t\t\t(item) => item.id === id\n\t\t\t\t);\n\t\t\t\tif (!findCompany && company) {\n\t\t\t\t\tconst updatedCompanyList: CompanyType[] = companyList;\n\t\t\t\t\tupdatedCompanyList.push(company);\n\t\t\t\t\tupdateCompanyList(updatedCompanyList);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\thandleUpdateCompanyInfo();\n\t\tnavigate('/pages/company/searchCompany');\n\t};\n\tconst handleReturn = () => {\n\t\tnavigate('/pages/company/searchCompany');\n\t};\n\tif (typeof company !== 'undefined') {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>{company.name}</h1>\n\t\t\t\t<h2>概要</h2>\n\t\t\t\t<div>{company.abstract}</div>\n\t\t\t\t<h2>業種</h2>\n\t\t\t\t<div>{company.industries.join(',')}</div>\n\t\t\t\t<h2>勤務地</h2>\n\t\t\t\t<div>{company.locations.join(',')}</div>\n\t\t\t\t<button onClick={() => handleAdd()}>登録</button>\n\t\t\t\t<button onClick={() => handleReturn()}>戻る</button>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <div></div>;\n\t}\n}\n\nexport default CompanyDetail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1D,SAASC,aAAaA,CAAAC,IAAA,EAQC;EAAAC,EAAA;EAAA,IARA;IACtBC,eAAe;IACfC,IAAI;IACJC,WAAW;IACXC,eAAe;IACfC,UAAU;IACVC,iBAAiB;IACjBC;EACmB,CAAC,GAAAR,IAAA;EACpB,MAAM;IAAES;EAAG,CAAC,GAAGb,SAAS,CAAiB,CAAC;EAC1C,MAAMc,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAc,CAAC;EACrDC,SAAS,CAAC,MAAM;IACf,MAAMmB,YAAY,GAAGX,eAAe,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC;IAEnE,IAAII,YAAY,EAAE;MACjBD,UAAU,CAACC,YAAY,CAAC;MACxB,IAAI,OAAOF,OAAO,KAAK,WAAW,EAAE;QACnCK,QAAQ,CAACC,KAAK,GAAI,GAAEN,OAAO,CAACO,IAAK,EAAC;MACnC;IACD;EACD,CAAC,CAAC;EACF,MAAMC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC3C,IAAI;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uDAAsDlB,IAAI,CAACmB,KAAM,IAAGb,EAAG,EAAC,EACzE;QACCc,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACR,cAAc,EAAE;QACjB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACpBC,IAAI,EAAE;QACP,CAAC;MACF,CACD,CAAC;MAED,MAAMC,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOC,GAAG,EAAE;MACbC,KAAK,CAAC,WAAW,CAAC;IACnB;EACD,CAAC;EACD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACvB,MAAMC,MAA0B,GAAG/B,IAAI,CAACE,eAAe,CAACS,IAAI,CAC1DC,IAAI,IAAKA,IAAI,KAAKN,EACpB,CAAC;IACD,IAAI,CAACyB,MAAM,EAAE;MACZ,MAAMC,iBAAiB,GAAGhC,IAAI,CAACE,eAAe;MAC9C,IAAI,OAAOI,EAAE,KAAK,QAAQ,EAAE;QAC3B0B,iBAAiB,CAACC,IAAI,CAAC3B,EAAE,CAAC;MAC3B;MACA,MAAM4B,WAAW,GAAG;QACnBnB,IAAI,EAAEf,IAAI,CAACe,IAAI;QACfI,KAAK,EAAEnB,IAAI,CAACmB,KAAK;QACjBjB,eAAe,EAAE8B;MAClB,CAAC;MACD7B,UAAU,CAAC+B,WAAW,CAAC;MACvB,IAAI5B,EAAE,EAAE;QACP,MAAM6B,WAA4B,GAAG;UACpChB,KAAK,EAAEnB,IAAI,CAACmB,KAAK;UACjBb,EAAE,EAAEA,EAAE;UACNmB,IAAI,EAAE;QACP,CAAC;QACD,MAAMW,sBAAyC,GAAGlC,eAAe;QACjEkC,sBAAsB,CAACH,IAAI,CAACE,WAAW,CAAC;QACxC9B,qBAAqB,CAAC+B,sBAAsB,CAAC;QAC7C,MAAMC,WAAoC,GAAGpC,WAAW,CAACU,IAAI,CAC3DC,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKA,EACvB,CAAC;QACD,IAAI,CAAC+B,WAAW,IAAI7B,OAAO,EAAE;UAC5B,MAAM8B,kBAAiC,GAAGrC,WAAW;UACrDqC,kBAAkB,CAACL,IAAI,CAACzB,OAAO,CAAC;UAChCJ,iBAAiB,CAACkC,kBAAkB,CAAC;QACtC;MACD;IACD;IACAtB,uBAAuB,CAAC,CAAC;IACzBT,QAAQ,CAAC,8BAA8B,CAAC;EACzC,CAAC;EACD,MAAMgC,YAAY,GAAGA,CAAA,KAAM;IAC1BhC,QAAQ,CAAC,8BAA8B,CAAC;EACzC,CAAC;EACD,IAAI,OAAOC,OAAO,KAAK,WAAW,EAAE;IACnC,oBACCb,OAAA;MAAA6C,QAAA,gBACC7C,OAAA;QAAA6C,QAAA,EAAKhC,OAAO,CAACO;MAAI;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBjD,OAAA;QAAA6C,QAAA,EAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACXjD,OAAA;QAAA6C,QAAA,EAAMhC,OAAO,CAACqC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7BjD,OAAA;QAAA6C,QAAA,EAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACXjD,OAAA;QAAA6C,QAAA,EAAMhC,OAAO,CAACsC,UAAU,CAACC,IAAI,CAAC,GAAG;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzCjD,OAAA;QAAA6C,QAAA,EAAI;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACZjD,OAAA;QAAA6C,QAAA,EAAMhC,OAAO,CAACwC,SAAS,CAACD,IAAI,CAAC,GAAG;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxCjD,OAAA;QAAQsD,OAAO,EAAEA,CAAA,KAAMnB,SAAS,CAAC,CAAE;QAAAU,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/CjD,OAAA;QAAQsD,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAAC,CAAE;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAER,CAAC,MAAM;IACN,oBAAOjD,OAAA;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EACnB;AACD;AAAC9C,EAAA,CAnGQF,aAAa;EAAA,QASNH,SAAS,EACPD,WAAW;AAAA;AAAA0D,EAAA,GAVpBtD,aAAa;AAqGtB,eAAeA,aAAa;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}