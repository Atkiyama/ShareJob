{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/companyAdd.tsx\",\n  _s = $RefreshSig$();\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport CompanyDetail from '../../components/companyDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyAdd(_ref) {\n  _s();\n  let {\n    searchedCompanyList\n  } = _ref;\n  const {\n    d\n  } = useParams();\n  const navigate = useNavigate();\n  // 対応する会社情報を探す\n  const company = searchedCompanyList.find(info => info.id === id);\n  const handleRegister = async () => {\n    try {\n      await fetch(`http://localhost:5000/myCompany/updateMyCompany/${email}/${id}`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          id: id,\n          memo: ''\n        })\n      });\n      if (company) {\n        alert(`${company.name}のメモを登録しました`);\n      }\n    } catch (err) {\n      alert('更新に失敗しました');\n    }\n  };\n\n  /**\n   *完了ボタンが押されたときの処理を実装する\n   */\n  const handleComplete = () => {\n    handleRegister();\n    navigate('/pages/home');\n  };\n  const handleReturn = () => {\n    navigate('/pages/home');\n  };\n\n  /**\n   * タイトルを更新する\n   */\n  useEffect(() => {\n    if (company) {\n      document.title = `${company.name}のメモ`;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [company ? /*#__PURE__*/_jsxDEV(CompanyDetail, {\n      company: company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleComplete,\n      children: \"\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReturn,\n      children: \"\\u623B\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n}\n_s(CompanyAdd, \"keJZ91CgVAnGywPqebP5upWCDks=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CompanyAdd;\nexport default CompanyAdd;\nvar _c;\n$RefreshReg$(_c, \"CompanyAdd\");","map":{"version":3,"names":["useParams","useNavigate","useEffect","CompanyDetail","jsxDEV","_jsxDEV","CompanyAdd","_ref","_s","searchedCompanyList","d","navigate","company","find","info","id","handleRegister","fetch","email","method","headers","Accept","body","JSON","stringify","memo","alert","name","err","handleComplete","handleReturn","document","title","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/companyAdd.tsx"],"sourcesContent":["import { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { CompanyAddProps, CompanyType } from '../../utils/types';\nimport CompanyDetail from '../../components/companyDetail';\n\nfunction CompanyAdd({ searchedCompanyList }: CompanyAddProps) {\n\tconst { d } = useParams();\n\tconst navigate = useNavigate();\n\t// 対応する会社情報を探す\n\tconst company: CompanyType | undefined = searchedCompanyList.find(\n\t\t(info) => info.id === id\n\t);\n\n\tconst handleRegister = async () => {\n\t\ttry {\n\t\t\tawait fetch(\n\t\t\t\t`http://localhost:5000/myCompany/updateMyCompany/${email}/${id}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\temail: email,\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tmemo: '',\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (company) {\n\t\t\t\talert(`${company.name}のメモを登録しました`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\talert('更新に失敗しました');\n\t\t}\n\t};\n\n\t/**\n\t *完了ボタンが押されたときの処理を実装する\n\t */\n\tconst handleComplete = () => {\n\t\thandleRegister();\n\t\tnavigate('/pages/home');\n\t};\n\n\tconst handleReturn = () => {\n\t\tnavigate('/pages/home');\n\t};\n\n\t/**\n\t * タイトルを更新する\n\t */\n\tuseEffect(() => {\n\t\tif (company) {\n\t\t\tdocument.title = `${company.name}のメモ`;\n\t\t}\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t{company ? <CompanyDetail company={company} /> : null}\n\n\t\t\t<button onClick={handleComplete}>追加</button>\n\t\t\t<button onClick={handleReturn}>戻る</button>\n\t\t</div>\n\t);\n}\n\nexport default CompanyAdd;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,SAAS,QAAQ,OAAO;AAEjC,OAAOC,aAAa,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,UAAUA,CAAAC,IAAA,EAA2C;EAAAC,EAAA;EAAA,IAA1C;IAAEC;EAAqC,CAAC,GAAAF,IAAA;EAC3D,MAAM;IAAEG;EAAE,CAAC,GAAGV,SAAS,CAAC,CAAC;EACzB,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMW,OAAgC,GAAGH,mBAAmB,CAACI,IAAI,CAC/DC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EACvB,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACH,MAAMC,KAAK,CACT,mDAAkDC,KAAM,IAAGH,EAAG,EAAC,EAChE;QACCI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACRC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QACjB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACpBN,KAAK,EAAEA,KAAK;UACZH,EAAE,EAAEA,EAAE;UACNU,IAAI,EAAE;QACP,CAAC;MACF,CACD,CAAC;MACD,IAAIb,OAAO,EAAE;QACZc,KAAK,CAAE,GAAEd,OAAO,CAACe,IAAK,YAAW,CAAC;MACnC;IACD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACbF,KAAK,CAAC,WAAW,CAAC;IACnB;EACD,CAAC;;EAED;AACD;AACA;EACC,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC5Bb,cAAc,CAAC,CAAC;IAChBL,QAAQ,CAAC,aAAa,CAAC;EACxB,CAAC;EAED,MAAMmB,YAAY,GAAGA,CAAA,KAAM;IAC1BnB,QAAQ,CAAC,aAAa,CAAC;EACxB,CAAC;;EAED;AACD;AACA;EACCT,SAAS,CAAC,MAAM;IACf,IAAIU,OAAO,EAAE;MACZmB,QAAQ,CAACC,KAAK,GAAI,GAAEpB,OAAO,CAACe,IAAK,KAAI;IACtC;EACD,CAAC,CAAC;EAEF,oBACCtB,OAAA;IAAA4B,QAAA,GACErB,OAAO,gBAAGP,OAAA,CAACF,aAAa;MAACS,OAAO,EAAEA;IAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,IAAI,eAErDhC,OAAA;MAAQiC,OAAO,EAAET,cAAe;MAAAI,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5ChC,OAAA;MAAQiC,OAAO,EAAER,YAAa;MAAAG,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAER;AAAC7B,EAAA,CA9DQF,UAAU;EAAA,QACJN,SAAS,EACNC,WAAW;AAAA;AAAAsC,EAAA,GAFpBjC,UAAU;AAgEnB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}