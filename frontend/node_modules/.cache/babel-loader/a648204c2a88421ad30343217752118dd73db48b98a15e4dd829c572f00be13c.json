{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/companyInfo/companyInfoEdit.tsx\",\n  _s = $RefreshSig$();\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyInfoEdit(_ref) {\n  _s();\n  let {\n    user,\n    companyList,\n    companyInfoList,\n    updateUser,\n    updateCompanyInfoList\n  } = _ref;\n  const {\n    email,\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  // 対応する会社情報を探す\n  const company = companyList.find(info => info.id === id);\n  const companyInfo = companyInfoList.find(info => info.id === id && info.email === email);\n  const [memo, setMemo] = useState((companyInfo === null || companyInfo === void 0 ? void 0 : companyInfo.memo) || '');\n  const handleMemoChange = event => {\n    setMemo(event.target.value);\n  };\n  const handleUpdate = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/companyInfo/updateCompanyInfo/${email}/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          memo: memo\n        })\n      });\n      const jsonResponse = await response.json();\n      alert(jsonResponse.message);\n    } catch (err) {\n      alert('更新に失敗しました');\n    }\n  };\n  const handleUser = async () => {\n    const list = [];\n    for (let i = 0; i < user.companyInfoList.length; i++) {}\n  };\n  const handleDelete = async () => {\n    const confirmDelete = window.confirm('本当に削除しますか？');\n    if (confirmDelete) {\n      try {\n        const response = await fetch(`http://localhost:5000/companyInfo/deleteCompanyInfo/${email}/${id}`, {\n          method: 'DELETE'\n        });\n        const jsonResponse = await response.json();\n        alert(jsonResponse.message);\n\n        // 削除が成功したら、リストから削除した情報を更新する\n        const updatedCompanyInfoList = companyInfoList.filter(info => info.id !== id);\n        updateCompanyInfoList(updatedCompanyInfoList);\n\n        // 削除後にリダイレクトするならば以下の行を有効化する\n        // navigate('/pages/home');\n      } catch (err) {\n        alert('削除に失敗しました');\n      }\n    }\n  };\n  const handleComplete = () => {\n    // 完了ボタンが押されたときの処理を実装する\n    const updatedCompanyInfoList = companyInfoList.map(info => {\n      if (info.email === email && info.id === id) {\n        return {\n          ...info,\n          memo: memo\n        };\n      }\n      return info;\n    });\n    updateCompanyInfoList(updatedCompanyInfoList);\n    handleUpdate();\n    navigate('/pages/home');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [company ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [company.name, \"\\u306E\\u30E1\\u30E2\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textarea\",\n        rows: 5,\n        value: memo,\n        onChange: handleMemoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleComplete,\n      children: \"\\u5B8C\\u4E86\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"\\u6D88\\u53BB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this);\n}\n_s(CompanyInfoEdit, \"UgNvk3IEgSYEB+9cZzQdMCAYr+Q=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CompanyInfoEdit;\nexport default CompanyInfoEdit;\nvar _c;\n$RefreshReg$(_c, \"CompanyInfoEdit\");","map":{"version":3,"names":["useParams","useNavigate","useState","jsxDEV","_jsxDEV","CompanyInfoEdit","_ref","_s","user","companyList","companyInfoList","updateUser","updateCompanyInfoList","email","id","navigate","company","find","info","companyInfo","memo","setMemo","handleMemoChange","event","target","value","handleUpdate","response","fetch","method","headers","body","JSON","stringify","jsonResponse","json","alert","message","err","handleUser","list","i","length","handleDelete","confirmDelete","window","confirm","updatedCompanyInfoList","filter","handleComplete","map","children","name","fileName","_jsxFileName","lineNumber","columnNumber","className","rows","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/companyInfo/companyInfoEdit.tsx"],"sourcesContent":["import { useParams, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport {\n\tCompanyInfoProps,\n\tCompanyInfoType,\n\tCompanyType,\n} from '../../utils/types';\n\nfunction CompanyInfoEdit({\n\tuser,\n\tcompanyList,\n\tcompanyInfoList,\n\tupdateUser,\n\tupdateCompanyInfoList,\n}: CompanyInfoProps) {\n\tconst { email, id } = useParams();\n\tconst navigate = useNavigate();\n\t// 対応する会社情報を探す\n\tconst company: CompanyType | undefined = companyList.find(\n\t\t(info) => info.id === id\n\t);\n\n\tconst companyInfo: CompanyInfoType | undefined = companyInfoList.find(\n\t\t(info) => info.id === id && info.email === email\n\t);\n\n\tconst [memo, setMemo] = useState<string>(companyInfo?.memo || '');\n\n\tconst handleMemoChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n\t\tsetMemo(event.target.value);\n\t};\n\n\tconst handleUpdate = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`http://localhost:5000/companyInfo/updateCompanyInfo/${email}/${id}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tmemo: memo,\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst jsonResponse = await response.json();\n\t\t\talert(jsonResponse.message);\n\t\t} catch (err) {\n\t\t\talert('更新に失敗しました');\n\t\t}\n\t};\n\tconst handleUser = async () => {\n\t\tconst list: string[] = [];\n\t\tfor (let i = 0; i < user.companyInfoList.length; i++) {}\n\t};\n\tconst handleDelete = async () => {\n\t\tconst confirmDelete = window.confirm('本当に削除しますか？');\n\t\tif (confirmDelete) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`http://localhost:5000/companyInfo/deleteCompanyInfo/${email}/${id}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst jsonResponse = await response.json();\n\t\t\t\talert(jsonResponse.message);\n\n\t\t\t\t// 削除が成功したら、リストから削除した情報を更新する\n\t\t\t\tconst updatedCompanyInfoList = companyInfoList.filter(\n\t\t\t\t\t(info) => info.id !== id\n\t\t\t\t);\n\t\t\t\tupdateCompanyInfoList(updatedCompanyInfoList);\n\n\t\t\t\t// 削除後にリダイレクトするならば以下の行を有効化する\n\t\t\t\t// navigate('/pages/home');\n\t\t\t} catch (err) {\n\t\t\t\talert('削除に失敗しました');\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleComplete = () => {\n\t\t// 完了ボタンが押されたときの処理を実装する\n\t\tconst updatedCompanyInfoList = companyInfoList.map((info) => {\n\t\t\tif (info.email === email && info.id === id) {\n\t\t\t\treturn {\n\t\t\t\t\t...info,\n\t\t\t\t\tmemo: memo,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn info;\n\t\t});\n\n\t\tupdateCompanyInfoList(updatedCompanyInfoList);\n\t\thandleUpdate();\n\t\tnavigate('/pages/home');\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{company ? <h2>{company.name}のメモ</h2> : null}\n\t\t\t<div className=\"textarea-container\">\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"textarea\"\n\t\t\t\t\trows={5}\n\t\t\t\t\tvalue={memo}\n\t\t\t\t\tonChange={handleMemoChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button onClick={handleComplete}>完了</button>\n\t\t\t<button onClick={handleDelete}>消去</button>\n\t\t</div>\n\t);\n}\n\nexport default CompanyInfoEdit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}