{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/companyList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { flexRender, getCoreRowModel, useReactTable } from '@tanstack/react-table';\n\n/**\n * 自分で登録した企業リストを表示する\n * @param param0\n * @returns\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyList(_ref) {\n  _s();\n  let {\n    user,\n    registerCompanyList,\n    updateRegisterCompanyList,\n    handleUpdate\n  } = _ref;\n  const navigate = useNavigate();\n  /**\n   * 表のヘッダを定義\n   */\n  const columns = [{\n    accessorKey: 'name',\n    header: ''\n  }, {\n    accessorKey: 'abstract',\n    header: ''\n  }, {\n    accessorKey: 'actions',\n    header: '',\n    // 空のヘッダーを指定して編集ボタンの列を作成\n    cell: rowContext => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleOpenEdit(rowContext.row.original),\n      children: \"\\u8A73\\u7D30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  }\n  // 他のカラムを追加する場合はここに定義します\n  ];\n\n  /**\n   * 企業編集画面を開く\n   * @param row idを格納する\n   */\n  const handleOpenEdit = row => {\n    navigate(`/pages/company/companyEdit/${row.id}`);\n  };\n  const data = registerCompanyList;\n  /**\n   * reactテーブルを定義\n   */\n  const table = useReactTable({\n    data: data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n\n  /**\n   * 自分が登録した企業をバックエンドから取得する\n   */\n  const handleMyCompanyList = async () => {\n    const response = await fetch(process.env.REACT_APP_BASE_URL + `company/getRegisterCompanyList?email=${user.email}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    const jsonResponse = await response.json();\n    updateRegisterCompanyList(jsonResponse.companyList);\n  };\n  const handleAdd = async () => {\n    navigate(`/pages/company/companyRegister/`);\n  };\n\n  /**\n   *ログイン状態によって処理を分岐する\n   */\n  useEffect(() => {\n    document.title = `登録企業一覧`;\n    if (user.email !== '') {\n      handleMyCompanyList();\n    } else {\n      alert('ログインしてください');\n      navigate('/pages/user/login');\n    }\n  }, []);\n  if (typeof data !== 'undefined') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table.getRowModel().rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.getVisibleCells().map((cell, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flexRender(cell.column.columnDef.cell, cell.getContext())\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 10\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"position-fixed\",\n        children: [\"\\u4F01\\u696D\\u306E\\u8FFD\\u52A0\\u767B\\u9332 \\u2192\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"large-button\",\n          onClick: handleAdd,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this);\n  } else {\n    const handleError = () => {\n      handleMyCompanyList();\n    };\n    handleError();\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 10\n    }, this);\n  }\n}\n_s(CompanyList, \"nzK2Qo3+MKX2avfKXMOTaA5FmWQ=\", false, function () {\n  return [useNavigate, useReactTable];\n});\n_c = CompanyList;\nexport default CompanyList;\nvar _c;\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"names":["React","useEffect","useNavigate","flexRender","getCoreRowModel","useReactTable","jsxDEV","_jsxDEV","CompanyList","_ref","_s","user","registerCompanyList","updateRegisterCompanyList","handleUpdate","navigate","columns","accessorKey","header","cell","rowContext","onClick","handleOpenEdit","row","original","children","fileName","_jsxFileName","lineNumber","columnNumber","id","data","table","handleMyCompanyList","response","fetch","process","env","REACT_APP_BASE_URL","email","method","headers","Accept","authorization","localStorage","getItem","jsonResponse","json","companyList","handleAdd","document","title","alert","className","getRowModel","rows","map","index","getVisibleCells","column","columnDef","getContext","handleError","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/companyList.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CompanyListProps, CompanyTableType } from '../../utils/types';\nimport {\n\tColumnDef,\n\tflexRender,\n\tgetCoreRowModel,\n\tuseReactTable,\n\tCellContext,\n} from '@tanstack/react-table';\n\n/**\n * 自分で登録した企業リストを表示する\n * @param param0\n * @returns\n */\nfunction CompanyList({\n\tuser,\n\tregisterCompanyList,\n\tupdateRegisterCompanyList,\n\thandleUpdate,\n}: CompanyListProps) {\n\tconst navigate = useNavigate();\n\t/**\n\t * 表のヘッダを定義\n\t */\n\tconst columns: ColumnDef<CompanyTableType, any>[] = [\n\t\t{\n\t\t\taccessorKey: 'name',\n\t\t\theader: '',\n\t\t},\n\t\t{\n\t\t\taccessorKey: 'abstract',\n\t\t\theader: '',\n\t\t},\n\t\t{\n\t\t\taccessorKey: 'actions',\n\t\t\theader: '', // 空のヘッダーを指定して編集ボタンの列を作成\n\t\t\tcell: (rowContext: CellContext<CompanyTableType, any>) => (\n\t\t\t\t<button onClick={() => handleOpenEdit(rowContext.row.original)}>\n\t\t\t\t\t詳細\n\t\t\t\t</button>\n\t\t\t),\n\t\t},\n\t\t// 他のカラムを追加する場合はここに定義します\n\t];\n\n\t/**\n\t * 企業編集画面を開く\n\t * @param row idを格納する\n\t */\n\tconst handleOpenEdit = (row: CompanyTableType) => {\n\t\tnavigate(`/pages/company/companyEdit/${row.id}`);\n\t};\n\n\tconst data = registerCompanyList;\n\t/**\n\t * reactテーブルを定義\n\t */\n\tconst table = useReactTable<CompanyTableType>({\n\t\tdata: data,\n\t\tcolumns,\n\t\tgetCoreRowModel: getCoreRowModel(),\n\t});\n\n\t/**\n\t * 自分が登録した企業をバックエンドから取得する\n\t */\n\tconst handleMyCompanyList = async () => {\n\t\tconst response = await fetch(\n\t\t\tprocess.env.REACT_APP_BASE_URL! +\n\t\t\t\t`company/getRegisterCompanyList?email=${user.email}`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tauthorization: `Bearer ${localStorage.getItem('token')}`,\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t\tconst jsonResponse = await response.json();\n\t\tupdateRegisterCompanyList(jsonResponse.companyList);\n\t};\n\tconst handleAdd = async () => {\n\t\tnavigate(`/pages/company/companyRegister/`);\n\t};\n\n\t/**\n\t *ログイン状態によって処理を分岐する\n\t */\n\tuseEffect(() => {\n\t\tdocument.title = `登録企業一覧`;\n\t\tif (user.email !== '') {\n\t\t\thandleMyCompanyList();\n\t\t} else {\n\t\t\talert('ログインしてください');\n\t\t\tnavigate('/pages/user/login');\n\t\t}\n\t}, []);\n\tif (typeof data !== 'undefined') {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<table className=\"table\">\n\t\t\t\t\t<thead></thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{table.getRowModel().rows.map((row, index) => (\n\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t{row.getVisibleCells().map((cell, index) => (\n\t\t\t\t\t\t\t\t\t<td key={index}>\n\t\t\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\t<div className=\"position-fixed\">\n\t\t\t\t\t企業の追加登録 →{' '}\n\t\t\t\t\t<button className=\"large-button\" onClick={handleAdd}>\n\t\t\t\t\t\t+\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\tconst handleError = () => {\n\t\t\thandleMyCompanyList();\n\t\t};\n\t\thandleError();\n\t\treturn <div></div>;\n\t}\n}\n\nexport default CompanyList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}