{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/home.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { flexRender, getCoreRowModel, useReactTable } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home(_ref) {\n  _s();\n  let {\n    user,\n    companyInfoList,\n    companyList,\n    updateCompanyList\n  } = _ref;\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const columns = [{\n    accessorKey: 'name',\n    header: '企業名'\n  }, {\n    accessorKey: 'memo',\n    header: 'メモ'\n  }, {\n    accessorKey: 'actions',\n    header: '',\n    // 空のヘッダーを指定して編集ボタンの列を作成\n    cell: row => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleEdit(row),\n      children: \"\\u7DE8\\u96C6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  }];\n  const table = useReactTable({\n    data: data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  useEffect(() => {\n    if (user.email !== '') {\n      document.title = 'ホーム';\n      const handleCompanyInfoTable = async () => {\n        if (companyList.length > 0) {\n          const newData = [];\n          for (let i = 0; i < companyInfoList.length; i++) {\n            for (let j = 0; j < companyList.length; j++) {\n              if (companyInfoList[i].id === companyList[j].id) {\n                const row = {\n                  name: companyList[j].name,\n                  memo: companyInfoList[i].memo\n                };\n                newData.push(row);\n                break;\n              }\n            }\n          }\n          setData(newData);\n        }\n      };\n      handleCompanyInfoTable();\n    } else {\n      alert('ログインしてください');\n      navigate('/pages/user/login');\n    }\n  }, [companyInfoList, companyList]);\n  const handleEdit = row => {\n    // 編集処理を実装する\n    navigate(`/edit/${row.id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [user.name, \"\\u69D8\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u767B\\u9332\\u4F01\\u696D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map((headerGroup, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map((cell, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n}\n_s(Home, \"dtL566W+yjmduXGmwsCKRiWuy4k=\", false, function () {\n  return [useNavigate, useReactTable];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useNavigate","flexRender","getCoreRowModel","useReactTable","jsxDEV","_jsxDEV","Home","_ref","_s","user","companyInfoList","companyList","updateCompanyList","navigate","data","setData","columns","accessorKey","header","cell","row","onClick","handleEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","table","email","document","title","handleCompanyInfoTable","length","newData","i","j","id","name","memo","push","alert","className","getHeaderGroups","map","headerGroup","index","headers","isPlaceholder","column","columnDef","getContext","getRowModel","rows","getVisibleCells","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/home.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n\tUserType,\n\tCompanyInfoType,\n\tHomeProps,\n\tCompanyInfoTableType,\n\tCompanyType,\n} from '../utils/types';\nimport { CompanyInfo } from '../../../backend/src/model/companyInfo';\nimport {\n\tColumnDef,\n\tflexRender,\n\tgetCoreRowModel,\n\tuseReactTable,\n} from '@tanstack/react-table';\n\nfunction Home({\n\tuser,\n\tcompanyInfoList,\n\tcompanyList,\n\tupdateCompanyList,\n}: HomeProps) {\n\tconst navigate = useNavigate();\n\tconst [data, setData] = useState<CompanyInfoTableType[]>([]);\n\n\tconst columns: ColumnDef<CompanyInfoTableType, any>[] = [\n\t\t{\n\t\t\taccessorKey: 'name',\n\t\t\theader: '企業名',\n\t\t},\n\t\t{\n\t\t\taccessorKey: 'memo',\n\t\t\theader: 'メモ',\n\t\t},\n\t\t{\n\t\t\taccessorKey: 'actions',\n\t\t\theader: '', // 空のヘッダーを指定して編集ボタンの列を作成\n\t\t\tcell: (row: CompanyInfoTableType) => (\n\t\t\t\t<button onClick={() => handleEdit(row)}>編集</button>\n\t\t\t),\n\t\t},\n\t];\n\n\tconst table = useReactTable<CompanyInfoTableType>({\n\t\tdata: data,\n\t\tcolumns,\n\t\tgetCoreRowModel: getCoreRowModel(),\n\t});\n\n\tuseEffect(() => {\n\t\tif (user.email !== '') {\n\t\t\tdocument.title = 'ホーム';\n\t\t\tconst handleCompanyInfoTable = async () => {\n\t\t\t\tif (companyList.length > 0) {\n\t\t\t\t\tconst newData: CompanyInfoTableType[] = [];\n\t\t\t\t\tfor (let i = 0; i < companyInfoList.length; i++) {\n\t\t\t\t\t\tfor (let j = 0; j < companyList.length; j++) {\n\t\t\t\t\t\t\tif (companyInfoList[i].id === companyList[j].id) {\n\t\t\t\t\t\t\t\tconst row = {\n\t\t\t\t\t\t\t\t\tname: companyList[j].name,\n\t\t\t\t\t\t\t\t\tmemo: companyInfoList[i].memo,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tnewData.push(row);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsetData(newData);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\thandleCompanyInfoTable();\n\t\t} else {\n\t\t\talert('ログインしてください');\n\t\t\tnavigate('/pages/user/login');\n\t\t}\n\t}, [companyInfoList, companyList]);\n\n\tconst handleEdit = (row: CompanyInfoTableType) => {\n\t\t// 編集処理を実装する\n\t\tnavigate(`/edit/${row.id}`);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>{user.name}様</h2>\n\t\t\t<h3>登録企業</h3>\n\n\t\t\t<table className=\"table\">\n\t\t\t\t<thead>\n\t\t\t\t\t{table.getHeaderGroups().map((headerGroup, index) => (\n\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t{headerGroup.headers.map((header, index) => (\n\t\t\t\t\t\t\t\t<th key={index}>\n\t\t\t\t\t\t\t\t\t{header.isPlaceholder\n\t\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t\t: flexRender(\n\t\t\t\t\t\t\t\t\t\t\t\theader.column.columnDef.header,\n\t\t\t\t\t\t\t\t\t\t\t\theader.getContext()\n\t\t\t\t\t\t\t\t\t\t  )}\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{table.getRowModel().rows.map((row, index) => (\n\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t{row.getVisibleCells().map((cell, index) => (\n\t\t\t\t\t\t\t\t<td key={index}>\n\t\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}