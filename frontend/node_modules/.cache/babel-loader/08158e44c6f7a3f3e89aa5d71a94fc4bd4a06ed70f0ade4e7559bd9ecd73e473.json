{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/searchCompany.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { flexRender, getCoreRowModel, useReactTable } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchCompany(_ref) {\n  _s();\n  let {\n    searchedCompany,\n    updateSearchCompanyList\n  } = _ref;\n  const navigate = useNavigate();\n  const [word, setWord] = useState('');\n  //const [searchedCompany, setSearchedCompany] = useState<CompanyType[]>([]);\n  const updateWord = event => {\n    setWord(event.target.value);\n  };\n  useEffect(() => {\n    document.title = `企業検索`;\n  });\n  const handleOpenDetail = row => {\n    navigate(`/pages/company/companyDetail/${row.id}`);\n  };\n  const columns = [{\n    accessorKey: 'name',\n    header: ''\n  }, {\n    accessorKey: 'abstract',\n    header: ''\n  }, {\n    accessorKey: 'actions',\n    header: '',\n    // 空のヘッダーを指定して編集ボタンの列を作成\n    cell: rowContext => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleOpenDetail(rowContext.row.original),\n      children: \"\\u8A73\\u7D30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }\n  // 他のカラムを追加する場合はここに定義します\n  ];\n\n  const data = searchedCompany; // 検索結果のデータを使用します\n\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/company/searchCompany/?words=${word}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const jsonResponse = await response.json();\n      updateSearchCompanyList(jsonResponse.companyList);\n    } catch (err) {\n      alert('検索に失敗しました');\n    }\n  };\n  const table = useReactTable({\n    data: data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u4F01\\u696D\\u691C\\u7D22\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"search-company__textarea\",\n        value: word,\n        onChange: updateWord,\n        placeholder: \"\\u30AD\\u30FC\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-company__button\",\n      onClick: handleSearch,\n      children: \"\\u691C\\u7D22\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table.getRowModel().rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.getVisibleCells().map((cell, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flexRender(cell.column.columnDef.cell, cell.getContext())\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 10\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 3\n  }, this);\n}\n_s(SearchCompany, \"ssNtCsCRKmI0Uvsiblj09wjLAFU=\", false, function () {\n  return [useNavigate, useReactTable];\n});\n_c = SearchCompany;\nexport default SearchCompany;\nvar _c;\n$RefreshReg$(_c, \"SearchCompany\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","flexRender","getCoreRowModel","useReactTable","jsxDEV","_jsxDEV","SearchCompany","_ref","_s","searchedCompany","updateSearchCompanyList","navigate","word","setWord","updateWord","event","target","value","document","title","handleOpenDetail","row","id","columns","accessorKey","header","cell","rowContext","onClick","original","children","fileName","_jsxFileName","lineNumber","columnNumber","data","handleSearch","response","fetch","method","headers","jsonResponse","json","companyList","err","alert","table","className","onChange","placeholder","getRowModel","rows","map","index","getVisibleCells","column","columnDef","getContext","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/searchCompany.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n\tCompanyType,\n\tCompanyTableType,\n\tSearchCompanyProps,\n} from '../../utils/types';\n\nimport {\n\tColumnDef,\n\tflexRender,\n\tgetCoreRowModel,\n\tuseReactTable,\n\tCellContext,\n} from '@tanstack/react-table';\n\nfunction SearchCompany({\n\tsearchedCompany,\n\tupdateSearchCompanyList,\n}: SearchCompanyProps) {\n\tconst navigate = useNavigate();\n\tconst [word, setWord] = useState<string>('');\n\t//const [searchedCompany, setSearchedCompany] = useState<CompanyType[]>([]);\n\tconst updateWord = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n\t\tsetWord(event.target.value);\n\t};\n\tuseEffect(() => {\n\t\tdocument.title = `企業検索`;\n\t});\n\n\tconst handleOpenDetail = (row: CompanyTableType) => {\n\t\tnavigate(`/pages/company/companyDetail/${row.id}`);\n\t};\n\n\tconst columns: ColumnDef<CompanyTableType, any>[] = [\n\t\t{\n\t\t\taccessorKey: 'name',\n\t\t\theader: '',\n\t\t},\n\t\t{\n\t\t\taccessorKey: 'abstract',\n\t\t\theader: '',\n\t\t},\n\t\t{\n\t\t\taccessorKey: 'actions',\n\t\t\theader: '', // 空のヘッダーを指定して編集ボタンの列を作成\n\t\t\tcell: (rowContext: CellContext<CompanyTableType, any>) => (\n\t\t\t\t<button onClick={() => handleOpenDetail(rowContext.row.original)}>\n\t\t\t\t\t詳細\n\t\t\t\t</button>\n\t\t\t),\n\t\t},\n\t\t// 他のカラムを追加する場合はここに定義します\n\t];\n\n\tconst data = searchedCompany; // 検索結果のデータを使用します\n\n\tconst handleSearch = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`http://localhost:5000/company/searchCompany/?words=${word}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tupdateSearchCompanyList(jsonResponse.companyList);\n\t\t} catch (err) {\n\t\t\talert('検索に失敗しました');\n\t\t}\n\t};\n\n\tconst table = useReactTable<CompanyTableType>({\n\t\tdata: data,\n\t\tcolumns,\n\t\tgetCoreRowModel: getCoreRowModel(),\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>企業検索</h1>\n\t\t\t<div>\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"search-company__textarea\"\n\t\t\t\t\tvalue={word}\n\t\t\t\t\tonChange={updateWord}\n\t\t\t\t\tplaceholder=\"キーワードを入力してください\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button className=\"search-company__button\" onClick={handleSearch}>\n\t\t\t\t検索\n\t\t\t</button>\n\t\t\t<div>\n\t\t\t\t<table className=\"table\">\n\t\t\t\t\t<thead></thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{table.getRowModel().rows.map((row, index) => (\n\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t{row.getVisibleCells().map((cell, index) => (\n\t\t\t\t\t\t\t\t\t<td key={index}>\n\t\t\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SearchCompany;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}