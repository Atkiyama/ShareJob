{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nconst useToken = () => {\n  _s();\n  const [loginUser, setLoginUser] = useState({\n    name: '',\n    email: ''\n  });\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const decoded = jwtDecode(token);\n      const user = {\n        name: decoded.name,\n        email: decoded.email\n      };\n      setLoginUser(user);\n    }\n  }, []);\n  return loginUser;\n};\n_s(useToken, \"wC7BCQlXZk/mr1VXEFNIHffmGAo=\");\nexport default useToken;","map":{"version":3,"names":["useState","useEffect","jwtDecode","useToken","_s","loginUser","setLoginUser","name","email","token","localStorage","getItem","decoded","user"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/utils/useToken.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { UserType } from './types';\n\nconst useToken = (): typeof loginUser => {\n    const [loginUser, setLoginUser] = useState<UserType>({\n        name: '',\n        email: '',\n    });\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n\n        if (token) {\n            const decoded: { email: string, name: string } = jwtDecode(token);\n            const user: UserType = {\n                name: decoded.name,\n                email: decoded.email,\n            };\n            setLoginUser(user);\n        }\n    }, []);\n\n    return loginUser;\n};\n\nexport default useToken;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAGlC,MAAMC,QAAQ,GAAGA,CAAA,KAAwB;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAW;IACjDO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACX,CAAC,CAAC;EAEFP,SAAS,CAAC,MAAM;IACZ,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,KAAK,EAAE;MACP,MAAMG,OAAwC,GAAGV,SAAS,CAACO,KAAK,CAAC;MACjE,MAAMI,IAAc,GAAG;QACnBN,IAAI,EAAEK,OAAO,CAACL,IAAI;QAClBC,KAAK,EAAEI,OAAO,CAACJ;MACnB,CAAC;MACDF,YAAY,CAACO,IAAI,CAAC;IACtB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOR,SAAS;AACpB,CAAC;AAACD,EAAA,CApBID,QAAQ;AAsBd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}