{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nconst useToken = (loginFlag, updateLoginFlag) => {\n  _s();\n  const [loginUser, setLoginUser] = useState({\n    name: '',\n    email: ''\n  });\n  //const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const handleToken = loginFlag => {\n    if (token) {\n      const decoded = jwtDecode(token);\n      const user = {\n        name: decoded.name,\n        email: decoded.email\n      };\n      setLoginUser(user);\n      if (!loginFlag) {\n        updateLoginFlag(true);\n      }\n    } else {\n      setLoginUser(user);\n      updateLoginFlag(false);\n    }\n  };\n  useEffect(() => {\n    console.log(\"useToken\");\n    handleToken(loginFlag);\n  }, [token, loginFlag]);\n  return loginUser;\n};\n_s(useToken, \"wC7BCQlXZk/mr1VXEFNIHffmGAo=\");\nexport default useToken;","map":{"version":3,"names":["useState","useEffect","jwtDecode","useToken","loginFlag","updateLoginFlag","_s","loginUser","setLoginUser","name","email","token","localStorage","getItem","handleToken","decoded","user","console","log"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/utils/useToken.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { UserType } from './types';\n\n\nconst useToken = (loginFlag: boolean, updateLoginFlag: (updatedLoginFlag: boolean) => void): typeof loginUser => {\n    const [loginUser, setLoginUser] = useState<UserType>({\n        name: '',\n        email: '',\n    });\n    //const navigate = useNavigate();\n    const token = localStorage.getItem('token');\n    const handleToken = (loginFlag: boolean) => {\n        if (token) {\n            const decoded: { email: string, name: string } = jwtDecode(token);\n\n            const user: UserType = {\n                name: decoded.name,\n                email: decoded.email,\n            };\n            setLoginUser(user);\n            if (!loginFlag) {\n                updateLoginFlag(true);\n            }\n\n        } else {\n            setLoginUser(user);\n            updateLoginFlag(false);\n        }\n    }\n    useEffect(() => {\n        console.log(\"useToken\");\n        handleToken(loginFlag);\n    }, [token, loginFlag]);\n\n\n    return loginUser;\n};\n\nexport default useToken;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAIlC,MAAMC,QAAQ,GAAGA,CAACC,SAAkB,EAAEC,eAAoD,KAAuB;EAAAC,EAAA;EAC7G,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAW;IACjDS,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACX,CAAC,CAAC;EACF;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,WAAW,GAAIV,SAAkB,IAAK;IACxC,IAAIO,KAAK,EAAE;MACP,MAAMI,OAAwC,GAAGb,SAAS,CAACS,KAAK,CAAC;MAEjE,MAAMK,IAAc,GAAG;QACnBP,IAAI,EAAEM,OAAO,CAACN,IAAI;QAClBC,KAAK,EAAEK,OAAO,CAACL;MACnB,CAAC;MACDF,YAAY,CAACQ,IAAI,CAAC;MAClB,IAAI,CAACZ,SAAS,EAAE;QACZC,eAAe,CAAC,IAAI,CAAC;MACzB;IAEJ,CAAC,MAAM;MACHG,YAAY,CAACQ,IAAI,CAAC;MAClBX,eAAe,CAAC,KAAK,CAAC;IAC1B;EACJ,CAAC;EACDJ,SAAS,CAAC,MAAM;IACZgB,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBJ,WAAW,CAACV,SAAS,CAAC;EAC1B,CAAC,EAAE,CAACO,KAAK,EAAEP,SAAS,CAAC,CAAC;EAGtB,OAAOG,SAAS;AACpB,CAAC;AAACD,EAAA,CAhCIH,QAAQ;AAkCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}