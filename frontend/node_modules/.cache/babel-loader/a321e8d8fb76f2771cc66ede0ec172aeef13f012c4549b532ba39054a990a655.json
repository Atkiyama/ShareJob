{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/user/login.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n *\tログイン画面\n * @param param0\n * @returns\n */\nfunction Login(_ref) {\n  _s();\n  let {\n    updatedLoginFlag\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  /**\n   *APIを呼び出してログイン処理を行う\n   * @param e\n   */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(process.env.REACT_APP_BASE_URL + `user/login`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      const jsonResponse = await response.json();\n      const name = jsonResponse.name;\n      if (jsonResponse.token) {\n        localStorage.setItem('token', jsonResponse.token);\n        alert(name + 'でログインしました');\n        navigate('/pages/home');\n      } else {\n        alert('ログインに失敗しました');\n      }\n    } catch (err) {\n      alert('ログインに失敗しました');\n    }\n  };\n\n  /**\n   * タイトルを更新する\n   */\n  useEffect(() => {\n    document.title = 'ログイン';\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" \\u30ED\\u30B0\\u30A4\\u30F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"text\",\n        name: \"password\",\n        placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n}\n_s(Login, \"P8N6aOEN8VF4cvKL87x4xkvKyJc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Login","_ref","_s","updatedLoginFlag","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","response","fetch","process","env","REACT_APP_BASE_URL","method","headers","Accept","body","JSON","stringify","jsonResponse","json","name","token","localStorage","setItem","alert","err","document","title","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","type","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/user/login.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { LoginProps } from '../../utils/types';\n\n/**\n *\tログイン画面\n * @param param0\n * @returns\n */\nfunction Login({ updatedLoginFlag }: LoginProps) {\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst navigate = useNavigate();\n\n\t/**\n\t *APIを呼び出してログイン処理を行う\n\t * @param e\n\t */\n\tconst handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\tprocess.env.REACT_APP_BASE_URL! + `user/login`,\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\temail: email,\n\t\t\t\t\t\tpassword: password,\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tconst name = jsonResponse.name;\n\t\t\tif (jsonResponse.token) {\n\t\t\t\tlocalStorage.setItem('token', jsonResponse.token);\n\n\t\t\t\talert(name + 'でログインしました');\n\n\t\t\t\tnavigate('/pages/home');\n\t\t\t} else {\n\t\t\t\talert('ログインに失敗しました');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\talert('ログインに失敗しました');\n\t\t}\n\t};\n\n\t/**\n\t * タイトルを更新する\n\t */\n\tuseEffect(() => {\n\t\tdocument.title = 'ログイン';\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1> ログイン</h1>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tplaceholder=\"メールアドレス\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tplaceholder=\"パスワード\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<button>ログイン</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAAAC,IAAA,EAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC;EAA6B,CAAC,GAAAF,IAAA;EAC9C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;;EAE9B;AACD;AACA;AACA;EACC,MAAMY,YAAY,GAAG,MAAOC,CAAmC,IAAK;IACnEA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3BC,OAAO,CAACC,GAAG,CAACC,kBAAkB,GAAK,YAAW,EAC9C;QACCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACRC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QACjB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACpBlB,KAAK,EAAEA,KAAK;UACZE,QAAQ,EAAEA;QACX,CAAC;MACF,CACD,CAAC;MACD,MAAMiB,YAAY,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAC1C,MAAMC,IAAI,GAAGF,YAAY,CAACE,IAAI;MAC9B,IAAIF,YAAY,CAACG,KAAK,EAAE;QACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,YAAY,CAACG,KAAK,CAAC;QAEjDG,KAAK,CAACJ,IAAI,GAAG,WAAW,CAAC;QAEzBjB,QAAQ,CAAC,aAAa,CAAC;MACxB,CAAC,MAAM;QACNqB,KAAK,CAAC,aAAa,CAAC;MACrB;IACD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACbD,KAAK,CAAC,aAAa,CAAC;IACrB;EACD,CAAC;;EAED;AACD;AACA;EACCjC,SAAS,CAAC,MAAM;IACfmC,QAAQ,CAACC,KAAK,GAAG,MAAM;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACCjC,OAAA;IAAAkC,QAAA,gBACClC,OAAA;MAAAkC,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdtC,OAAA;MAAMuC,QAAQ,EAAE7B,YAAa;MAAAwB,QAAA,gBAC5BlC,OAAA;QACCwC,KAAK,EAAEnC,KAAM;QACboC,QAAQ,EAAG9B,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;QAC1CG,IAAI,EAAC,MAAM;QACXjB,IAAI,EAAC,OAAO;QACZkB,WAAW,EAAC,4CAAS;QACrBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACFtC,OAAA;QACCwC,KAAK,EAAEjC,QAAS;QAChBkC,QAAQ,EAAG9B,CAAC,IAAKH,WAAW,CAACG,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;QAC7CG,IAAI,EAAC,MAAM;QACXjB,IAAI,EAAC,UAAU;QACfkB,WAAW,EAAC,gCAAO;QACnBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACFtC,OAAA;QAAAkC,QAAA,EAAQ;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER;AAACnC,EAAA,CA1EQF,KAAK;EAAA,QAGIH,WAAW;AAAA;AAAAgD,EAAA,GAHpB7C,KAAK;AA4Ed,eAAeA,KAAK;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}