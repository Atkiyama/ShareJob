{"ast":null,"code":"var _jsxFileName = \"/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/companyDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyDetail(_ref) {\n  _s();\n  let {\n    searchedCompany\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [company, setCompany] = useState();\n  useEffect(() => {\n    const foundCompany = searchedCompany.find(item => item.id === id);\n    if (foundCompany) {\n      setCompany(foundCompany);\n      document.title = `${company.name}`;\n    }\n    if (typeof company === 'CompanyType') {}\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(CompanyDetail, \"HdyNK+0ufGtU2emPGW5kdv8lLlY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CompanyDetail;\nexport default CompanyDetail;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetail\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","CompanyDetail","_ref","_s","searchedCompany","id","navigate","company","setCompany","foundCompany","find","item","document","title","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akiyamashuuhei/data/ShereJob/frontend/src/pages/company/companyDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { CompanyDetailProps, CompanyType } from '../../utils/types';\nimport { Company } from '../../../../backend/src/model/company';\n\nfunction CompanyDetail({ searchedCompany }: CompanyDetailProps) {\n\tconst { id } = useParams<{ id: string }>();\n\tconst navigate = useNavigate();\n\tconst [company, setCompany] = useState<CompanyType>();\n\tuseEffect(() => {\n\t\tconst foundCompany = searchedCompany.find((item) => item.id === id);\n\n\t\tif (foundCompany) {\n\t\t\tsetCompany(foundCompany);\n\t\t\tdocument.title = `${company.name}`;\n\t\t}\n\t\tif (typeof company === 'CompanyType') {\n\t\t}\n\t});\n\treturn <div></div>;\n}\n\nexport default CompanyDetail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1D,SAASC,aAAaA,CAAAC,IAAA,EAA0C;EAAAC,EAAA;EAAA,IAAzC;IAAEC;EAAoC,CAAC,GAAAF,IAAA;EAC7D,MAAM;IAAEG;EAAG,CAAC,GAAGP,SAAS,CAAiB,CAAC;EAC1C,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAc,CAAC;EACrDC,SAAS,CAAC,MAAM;IACf,MAAMa,YAAY,GAAGL,eAAe,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC;IAEnE,IAAII,YAAY,EAAE;MACjBD,UAAU,CAACC,YAAY,CAAC;MACxBG,QAAQ,CAACC,KAAK,GAAI,GAAEN,OAAO,CAACO,IAAK,EAAC;IACnC;IACA,IAAI,OAAOP,OAAO,KAAK,aAAa,EAAE,CACtC;EACD,CAAC,CAAC;EACF,oBAAOP,OAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACnB;AAACf,EAAA,CAfQF,aAAa;EAAA,QACNH,SAAS,EACPD,WAAW;AAAA;AAAAsB,EAAA,GAFpBlB,aAAa;AAiBtB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}